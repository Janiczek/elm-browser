{"version":3,"sources":["src/style-settings.js","src/common-utils.js","src/document-wait.js","src/custom-style-interface.js","entrypoints/custom-style-interface.js"],"names":["nativeShadow","window","nativeCssVariables","calcCssVariables$$module$src$style_settings","calcCssVariables","settings","navigator","userAgent","match","CSS","supports","ShadyCSS","undefined","nativeCss","module$src$style_settings.nativeCssVariables","updateNativeProperties$$module$src$common_utils","updateNativeProperties","element","properties","p","style","removeProperty","setProperty","readyPromise","whenReady","resolveFn","documentWait$$module$src$document_wait","documentWait","validateFn","requestAnimationFrame","callback","Promise","resolve","document","readyState","addEventListener","then","transformFn","constructor","CustomStyleInterface","enqueueDocumentValidation","addCustomStyle","push","getStyleForCustomStyle","customStyle","processStyles","cs","i","length","styleToTransform","prototype","Object","defineProperties","get","set","fn","needsEnqueue","customStyleInterface","prepareTemplate","styleSubtree","styleElement","styleDocument","body","getComputedStyleValue","property","value","getComputedStyle","getPropertyValue","trim"],"mappings":"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","file":"custom-style-interface.min.js","sourcesContent":["/**\r\n@license\r\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\r\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\nCode distributed by Google as part of the polymer project is also\r\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n*/\r\n\r\n'use strict';\r\n\r\nexport let nativeShadow = !(window['ShadyDOM'] && window['ShadyDOM']['inUse']);\r\nexport let nativeCssVariables;\r\n\r\n/**\r\n * @param {(ShadyCSSOptions | ShadyCSSInterface)=} settings\r\n */\r\nfunction calcCssVariables(settings) {\r\n  if (settings && settings['shimcssproperties']) {\r\n    nativeCssVariables = false;\r\n  } else {\r\n    // chrome 49 has semi-working css vars, check if box-shadow works\r\n    // safari 9.1 has a recalc bug: https://bugs.webkit.org/show_bug.cgi?id=155782\r\n    // However, shim css custom properties are only supported with ShadyDOM enabled,\r\n    // so fall back on native if we do not detect ShadyDOM\r\n    nativeCssVariables = nativeShadow || Boolean(!navigator.userAgent.match('AppleWebKit/601') &&\r\n      window.CSS && CSS.supports && CSS.supports('box-shadow', '0 0 0 var(--foo)'));\r\n  }\r\n}\r\n\r\nif (window.ShadyCSS && window.ShadyCSS.nativeCss !== undefined) {\r\n  nativeCssVariables = window.ShadyCSS.nativeCss;\r\n} else if (window.ShadyCSS) {\r\n  calcCssVariables(window.ShadyCSS);\r\n  // reset window variable to let ShadyCSS API take its place\r\n  window.ShadyCSS = undefined;\r\n} else {\r\n  calcCssVariables(window['WebComponents'] && window['WebComponents']['flags']);\r\n}","/**\r\n@license\r\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\r\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\nCode distributed by Google as part of the polymer project is also\r\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n*/\r\n\r\n'use strict';\r\n\r\nimport { MIXIN_MATCH, VAR_ASSIGN } from './common-regex'\r\n\r\n/**\r\n * @param {Element} element\r\n * @param {Object=} properties\r\n */\r\nexport function updateNativeProperties(element, properties) {\r\n  // remove previous properties\r\n  for (let p in properties) {\r\n    // NOTE: for bc with shim, don't apply null values.\r\n    if (p === null) {\r\n      element.style.removeProperty(p);\r\n    } else {\r\n      element.style.setProperty(p, properties[p]);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @param {Element} element\r\n * @param {string} property\r\n * @return {string}\r\n */\r\nexport function getComputedStyleValue(element, property) {\r\n  /**\r\n   * @const {string}\r\n   */\r\n  const value = window.getComputedStyle(element).getPropertyValue(property);\r\n  if (!value) {\r\n    return '';\r\n  } else {\r\n    return value.trim();\r\n  }\r\n}\r\n\r\n/**\r\n * return true if `cssText` contains a mixin definition or consumption\r\n * @param {string} cssText\r\n * @return {boolean}\r\n */\r\nexport function detectMixin(cssText) {\r\n  const has = MIXIN_MATCH.test(cssText) || VAR_ASSIGN.test(cssText);\r\n  // reset state of the regexes\r\n  MIXIN_MATCH.lastIndex = 0;\r\n  VAR_ASSIGN.lastIndex = 0;\r\n  return has;\r\n}","/**\r\n@license\r\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\r\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\nCode distributed by Google as part of the polymer project is also\r\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n*/\r\n\r\n'use strict';\r\n\r\n/** @type {Promise<void>} */\r\nlet readyPromise = null;\r\n\r\n/** @type {?function(?function())} */\r\nlet whenReady = window['HTMLImports'] && window['HTMLImports']['whenReady'] || null;\r\n\r\n/** @type {function()} */\r\nlet resolveFn;\r\n\r\n/**\r\n * @param {?function()} callback\r\n */\r\nexport default function documentWait(callback) {\r\n  requestAnimationFrame(function() {\r\n    if (whenReady) {\r\n      whenReady(callback)\r\n    } else {\r\n      if (!readyPromise) {\r\n        readyPromise = new Promise((resolve) => {resolveFn = resolve});\r\n        if (document.readyState === 'complete') {\r\n          resolveFn();\r\n        } else {\r\n          document.addEventListener('readystatechange', () => {\r\n            if (document.readyState === 'complete') {\r\n              resolveFn();\r\n            }\r\n          });\r\n        }\r\n      }\r\n      readyPromise.then(function(){ callback && callback(); });\r\n    }\r\n  });\r\n}\r\n","/**\r\n@license\r\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\r\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\nCode distributed by Google as part of the polymer project is also\r\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n*/\r\n\r\n'use strict';\r\n\r\nimport documentWait from './document-wait.js'\r\n\r\n/**\r\n * @typedef {HTMLStyleElement | {getStyle: function():HTMLStyleElement}}\r\n */\r\nexport let CustomStyleProvider;\r\n\r\nconst SEEN_MARKER = '__seenByShadyCSS';\r\nconst CACHED_STYLE = '__shadyCSSCachedStyle';\r\n\r\n/** @type {?function(!HTMLStyleElement)} */\r\nlet transformFn = null;\r\n\r\n/** @type {?function()} */\r\nlet validateFn = null;\r\n\r\n/**\r\nThis interface is provided to add document-level <style> elements to ShadyCSS for processing.\r\nThese styles must be processed by ShadyCSS to simulate ShadowRoot upper-bound encapsulation from outside styles\r\nIn addition, these styles may also need to be processed for @apply rules and CSS Custom Properties\r\n\r\nTo add document-level styles to ShadyCSS, one can call `ShadyCSS.addDocumentStyle(styleElement)` or `ShadyCSS.addDocumentStyle({getStyle: () => styleElement})`\r\n\r\nIn addition, if the process used to discover document-level styles can be synchronously flushed, one should set `ShadyCSS.documentStyleFlush`.\r\nThis function will be called when calculating styles.\r\n\r\nAn example usage of the document-level styling api can be found in `examples/document-style-lib.js`\r\n\r\n@unrestricted\r\n*/\r\nexport default class CustomStyleInterface {\r\n  constructor() {\r\n    /** @type {!Array<!CustomStyleProvider>} */\r\n    this['customStyles'] = [];\r\n    this['enqueued'] = false;\r\n  }\r\n  /**\r\n   * Queue a validation for new custom styles to batch style recalculations\r\n   */\r\n  enqueueDocumentValidation() {\r\n    if (this['enqueued'] || !validateFn) {\r\n      return;\r\n    }\r\n    this['enqueued'] = true;\r\n    documentWait(validateFn);\r\n  }\r\n  /**\r\n   * @param {!HTMLStyleElement} style\r\n   */\r\n  addCustomStyle(style) {\r\n    if (!style[SEEN_MARKER]) {\r\n      style[SEEN_MARKER] = true;\r\n      this['customStyles'].push(style);\r\n      this.enqueueDocumentValidation();\r\n    }\r\n  }\r\n  /**\r\n   * @param {!CustomStyleProvider} customStyle\r\n   * @return {HTMLStyleElement}\r\n   */\r\n  getStyleForCustomStyle(customStyle) {\r\n    if (customStyle[CACHED_STYLE]) {\r\n      return customStyle[CACHED_STYLE];\r\n    }\r\n    let style;\r\n    if (customStyle['getStyle']) {\r\n      style = customStyle['getStyle']();\r\n    } else {\r\n      style = customStyle;\r\n    }\r\n    return style;\r\n  }\r\n  /**\r\n   * @return {!Array<!CustomStyleProvider>}\r\n   */\r\n  processStyles() {\r\n    const cs = this['customStyles'];\r\n    for (let i = 0; i < cs.length; i++) {\r\n      const customStyle = cs[i];\r\n      if (customStyle[CACHED_STYLE]) {\r\n        continue;\r\n      }\r\n      const style = this.getStyleForCustomStyle(customStyle);\r\n      if (style) {\r\n        // HTMLImports polyfill may have cloned the style into the main document,\r\n        // which is referenced with __appliedElement.\r\n        const styleToTransform = /** @type {!HTMLStyleElement} */(style['__appliedElement'] || style);\r\n        if (transformFn) {\r\n          transformFn(styleToTransform);\r\n        }\r\n        customStyle[CACHED_STYLE] = styleToTransform;\r\n      }\r\n    }\r\n    return cs;\r\n  }\r\n}\r\n\r\nCustomStyleInterface.prototype['addCustomStyle'] = CustomStyleInterface.prototype.addCustomStyle;\r\nCustomStyleInterface.prototype['getStyleForCustomStyle'] = CustomStyleInterface.prototype.getStyleForCustomStyle;\r\nCustomStyleInterface.prototype['processStyles'] = CustomStyleInterface.prototype.processStyles;\r\n\r\nObject.defineProperties(CustomStyleInterface.prototype, {\r\n  'transformCallback': {\r\n    /** @return {?function(!HTMLStyleElement)} */\r\n    get() {\r\n      return transformFn;\r\n    },\r\n    /** @param {?function(!HTMLStyleElement)} fn */\r\n    set(fn) {\r\n      transformFn = fn;\r\n    }\r\n  },\r\n  'validateCallback': {\r\n    /** @return {?function()} */\r\n    get() {\r\n      return validateFn;\r\n    },\r\n    /**\r\n     * @param {?function()} fn\r\n     * @this {CustomStyleInterface}\r\n     */\r\n    set(fn) {\r\n      let needsEnqueue = false;\r\n      if (!validateFn) {\r\n        needsEnqueue = true;\r\n      }\r\n      validateFn = fn;\r\n      if (needsEnqueue) {\r\n        this.enqueueDocumentValidation();\r\n      }\r\n    },\r\n  }\r\n})\r\n\r\n/** @typedef {{\r\n * customStyles: !Array<!CustomStyleProvider>,\r\n * addCustomStyle: function(!CustomStyleProvider),\r\n * getStyleForCustomStyle: function(!CustomStyleProvider): HTMLStyleElement,\r\n * findStyles: function(),\r\n * transformCallback: ?function(!HTMLStyleElement),\r\n * validateCallback: ?function()\r\n * }}\r\n */\r\nexport let CustomStyleInterfaceInterface;\r\n","/**\r\n@license\r\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\r\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\nCode distributed by Google as part of the polymer project is also\r\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n*/\r\n\r\n'use strict';\r\n\r\nimport CustomStyleInterface from '../src/custom-style-interface.js'\r\nimport {getComputedStyleValue, updateNativeProperties} from '../src/common-utils.js'\r\nimport {nativeCssVariables, nativeShadow} from '../src/style-settings.js'\r\n\r\nconst customStyleInterface = new CustomStyleInterface();\r\n\r\nif (!window.ShadyCSS) {\r\n  window.ShadyCSS = {\r\n    /**\r\n     * @param {HTMLTemplateElement} template\r\n     * @param {string} elementName\r\n     * @param {string=} elementExtends\r\n     */\r\n    prepareTemplate(template, elementName, elementExtends) {}, // eslint-disable-line no-unused-vars\r\n\r\n    /**\r\n     * @param {Element} element\r\n     * @param {Object=} properties\r\n     */\r\n    styleSubtree(element, properties) {\r\n      customStyleInterface.processStyles();\r\n      updateNativeProperties(element, properties);\r\n    },\r\n\r\n    /**\r\n     * @param {Element} element\r\n     */\r\n    styleElement(element) { // eslint-disable-line no-unused-vars\r\n      customStyleInterface.processStyles();\r\n    },\r\n\r\n    /**\r\n     * @param {Object=} properties\r\n     */\r\n    styleDocument(properties) {\r\n      customStyleInterface.processStyles();\r\n      updateNativeProperties(document.body, properties);\r\n    },\r\n\r\n    /**\r\n     * @param {Element} element\r\n     * @param {string} property\r\n     * @return {string}\r\n     */\r\n    getComputedStyleValue(element, property) {\r\n      return getComputedStyleValue(element, property);\r\n    },\r\n    nativeCss: nativeCssVariables,\r\n    nativeShadow: nativeShadow\r\n  }\r\n}\r\n\r\nwindow.ShadyCSS.CustomStyleInterface = customStyleInterface;"]}