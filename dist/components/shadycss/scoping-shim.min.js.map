{"version":3,"sources":["src/template-map.js"," [synthetic:util/global] ","src/css-parse.js","src/apply-shim-utils.js","src/common-regex.js","src/style-settings.js","src/style-util.js","src/document-wait.js","src/style-transformer.js","src/document-watcher.js","src/style-info.js","src/style-properties.js","src/style-placeholder.js","src/scoping-shim.js","src/style-cache.js","src/common-utils.js","entrypoints/scoping-shim.js"],"names":["$jscomp.global","templateMap","constructor","StyleNode","parse$$module$src$css_parse","parse","text","replace","RX$$module$src$css_parse.comments","RX$$module$src$css_parse.port","parseCss","root","length","n","i","l","OPEN_BRACE","p","previous","push","CLOSE_BRACE","parseCss$$module$src$css_parse","node","t","substring","trim","ss","_expandUnicodeEscapes","RX$$module$src$css_parse.multipleSpaces","lastIndexOf","s","indexOf","AT_START","MEDIA_START","match","RX$$module$src$css_parse.keyframesRule","types$$module$src$css_parse.KEYFRAMES_RULE","split","pop","types$$module$src$css_parse.MEDIA_RULE","VAR_START","types$$module$src$css_parse.STYLE_RULE","types$$module$src$css_parse.MIXIN_RULE","r$","r","_expandUnicodeEscapes$$module$src$css_parse","code","repeat","stringify$$module$src$css_parse","stringify","preserveProperties","cssText","rules","RX$$module$src$css_parse.customProp","RX$$module$src$css_parse.mixinProp","RX$$module$src$css_parse.mixinApply","RX$$module$src$css_parse.varApply","STYLE_RULE","KEYFRAMES_RULE","MEDIA_RULE","MIXIN_RULE","comments","port","customProp","mixinProp","mixinApply","varApply","keyframesRule","multipleSpaces","promise","Promise","resolve","invalidate$$module$src$apply_shim_utils","invalidate","elementName","template","templateIsValid$$module$src$apply_shim_utils","templateIsValid","startValidatingTemplate$$module$src$apply_shim_utils","startValidatingTemplate","_validating","then","VAR_ASSIGN","MIXIN_MATCH","VAR_CONSUMED","ANIMATION_MATCH","MEDIA_MATCH","BRACKETED","nativeShadow","window","nativeCssVariables","calcCssVariables$$module$src$style_settings","calcCssVariables","settings","navigator","userAgent","CSS","supports","ShadyCSS","undefined","nativeCss","module$src$style_settings.nativeCssVariables","toCssText$$module$src$style_util","toCssText","callback","forEachRule","rulesForStyle$$module$src$style_util","rulesForStyle","style","textContent","isKeyframesSelector$$module$src$style_util","isKeyframesSelector","rule","forEachRule$$module$src$style_util","styleRuleCallback","keyframesRuleCallback","onlyActiveRules","skipRules","type","matchMedia","matches","applyCss$$module$src$style_util","applyCss","moniker","target","contextNode","document","createElement","setAttribute","applyStyle","lastHeadApplyNode","applyStyle$$module$src$style_util","head","insertBefore","nextSibling","firstChild","compareDocumentPosition","position","Node","DOCUMENT_POSITION_PRECEDING","processVariableAndFallback$$module$src$style_util","processVariableAndFallback","str","start","level","inner","end","prefix","suffix","comma","value","fallback","setElementClassRaw$$module$src$style_util","setElementClassRaw","element","call","getIsExtends$$module$src$style_util","getIsExtends","localName","typeExtension","is","getAttribute","extends","readyPromise","whenReady","resolveFn","documentWait$$module$src$document_wait","documentWait","requestAnimationFrame","readyState","addEventListener","StyleTransformer","dom","scope","shouldRemoveScope","$jscompDefaultExport","_transformDom","selector","nodeType","ELEMENT_NODE","classList","remove","SCOPE_NAME","add","c","CLASS","newValue","c$","childNodes","content","_content","children","elementStyles","styleRules","cssBuildType","css","ext","hostScope","_calcHostScope","CSS_CLASS_PREFIX","isScoped","transformedSelector","_transformRuleCss","self","_transformComplexSelector","transformer","p$","COMPLEX_SELECTOR_SEP","join","stop","NTH","m","SLOTTED_START","HOST","SIMPLE_SELECTOR_SEP","info","_transformCompoundSelector","combinator","slottedIndex","SLOTTED","_transformHostSelector","_transformSimpleSelector","slotted","SLOTTED_PAREN","paren","DIR_PAREN","before","dir","PSEUDO_PREFIX","HOST_PAREN","SIMPLE_SELECTOR_PREFIX","host","typeSelector","SELECTOR_NO_MATCH","normalizeRootSelector","ROOT","_transformDocumentSelector","SCOPE_DOC_SELECTOR","$jscomp.global.Object.defineProperties","RegExp","flush$$module$src$document_watcher","handler$$module$src$document_watcher","handler","mxns","x","mxn","documentElement","addedNodes","getRootNode","classes","Array","from","hasAttribute","idx","ownerDocument","currentScope","DOCUMENT_FRAGMENT_NODE","newScope","observer","MutationObserver","observe","childList","subtree","delayedStart","body","listener","removeEventListener","flush","takeRecords","module$src$document_watcher.flush","StyleInfo","ast","placeholder","ownStylePropertyNames","overrideStyleProperties","customStyle","scopeSelector","styleProperties","get","set","styleInfo","_getStyleRules","prototype","Element","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","IS_IE","StyleProperties","decorateStyles","props","keyframes","ruleIndex","decorateRule","index","propertyInfo","exec","name","onKeyframesRule","_keyframes","names","properties","collectProperties","hasProperties","Object","assign","any","valueForProperty","property","valueForProperties","fn","propertyValue","parts","lastIndex","colon","pp","slice","propertyDataFromStyles","o","selectorToMatch","parseInt","key","whenHostOrRootRule","cssBuild","parsedSelector","isRoot","isHost","hostAndRootPropertiesForScope","hostProps","rootProps","_element","transformStyles","hostSelector","hostRx","HOST_PREFIX","rxHostSelector","HOST_SUFFIX","StyleInfo$$module$src$style_info.get","keyframeTransforms","_elementKeyframeTransforms","output","input","hasAnimations","test","keyframeNamesToTransform","keyframe","transform","keyframesRules","keyframesNameRx","transformedKeyframesName","scopeId","_keyframesRuleTransformer","applyCustomStyle","XSCOPE_NAME","placeholderMap","ce","origDefine","wrappedDefine","clazz","options","placeHolder","createComment","after","styleCache","cache","typeMax","ScopingShim","_scopeCounter","_documentOwner","_documentOwnerStyleInfo","StyleInfo$$module$src$style_info.set","_elementsHaveApplied","_customStyleInterface","_applyShim","_ensure","ScopingShim$$module$src$scoping_shim.prototype","?.prototype","ScopingShim$$module$src$scoping_shim_prototype$flush","getStyleAst","styleAstToString","prepareTemplate","_prepared","querySelector","styles","querySelectorAll","parentNode","removeChild","__cssBuild","has","_cssBuild","ownPropertyNames","shadowroot","_style","_ownPropertyNames","_ensureCustomStyleInterface","CustomStyleInterface","transformCustomStyleForDocument","flushCustomStyles","_ensureApplyShim","ApplyShim","customStyles","_revalidateCustomStyleApplyShim","_updateProperties","_applyCustomStyles","styleDocument","styleElement","overrideProps","_isRootOwner","removeProperty","setProperty","shadowRoot","list","entry","pn","cachedStyle","cacheEntry","oldScopeSelector","cachedScopeSelector","id","v","shift","_styleOwnerForNode","owner","ownerStyleInfo","create","hostAndRootProps","propertiesMatchingHost","propertyData","overrides","getOwnPropertyNames","styleSubtree","shadowChildren","_transformRule","getComputedStyleValue","getComputedStyle","getPropertyValue","setElementClass","classString","scopeName","classAttr","k$","_styleInfoForNode","defineProperties","scopingShim","elementExtends"],"mappings":"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","file":"scoping-shim.min.js","sourcesContent":["/**\r\n@license\r\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\r\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\nCode distributed by Google as part of the polymer project is also\r\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n*/\r\n\r\n'use strict';\r\n\r\n/**\r\n * @const {!Object<string, !HTMLTemplateElement>}\r\n */\r\nconst templateMap = {};\r\nexport default templateMap;\r\n",null,"/**\r\n@license\r\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\r\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\nCode distributed by Google as part of the polymer project is also\r\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n*/\r\n\r\n/*\r\nExtremely simple css parser. Intended to be not more than what we need\r\nand definitely not necessarily correct =).\r\n*/\r\n\r\n'use strict';\r\n\r\n/** @unrestricted */\r\nclass StyleNode {\r\n  constructor() {\r\n    /** @type {number} */\r\n    this['start'] = 0;\r\n    /** @type {number} */\r\n    this['end'] = 0;\r\n    /** @type {StyleNode} */\r\n    this['previous'] = null;\r\n    /** @type {StyleNode} */\r\n    this['parent'] = null;\r\n    /** @type {Array<StyleNode>} */\r\n    this['rules'] = null;\r\n    /** @type {string} */\r\n    this['parsedCssText'] = '';\r\n    /** @type {string} */\r\n    this['cssText'] = '';\r\n    /** @type {boolean} */\r\n    this['atRule'] = false;\r\n    /** @type {number} */\r\n    this['type'] = 0;\r\n    /** @type {string} */\r\n    this['keyframesName'] = '';\r\n    /** @type {string} */\r\n    this['selector'] = '';\r\n    /** @type {string} */\r\n    this['parsedSelector'] = '';\r\n  }\r\n}\r\n\r\nexport {StyleNode}\r\n\r\n// given a string of css, return a simple rule tree\r\n/**\r\n * @param {string} text\r\n * @return {StyleNode}\r\n */\r\nexport function parse(text) {\r\n  text = clean(text);\r\n  return parseCss(lex(text), text);\r\n}\r\n\r\n// remove stuff we don't care about that may hinder parsing\r\n/**\r\n * @param {string} cssText\r\n * @return {string}\r\n */\r\nfunction clean(cssText) {\r\n  return cssText.replace(RX.comments, '').replace(RX.port, '');\r\n}\r\n\r\n// super simple {...} lexer that returns a node tree\r\n/**\r\n * @param {string} text\r\n * @return {StyleNode}\r\n */\r\nfunction lex(text) {\r\n  let root = new StyleNode();\r\n  root['start'] = 0;\r\n  root['end'] = text.length\r\n  let n = root;\r\n  for (let i = 0, l = text.length; i < l; i++) {\r\n    if (text[i] === OPEN_BRACE) {\r\n      if (!n['rules']) {\r\n        n['rules'] = [];\r\n      }\r\n      let p = n;\r\n      let previous = p['rules'][p['rules'].length - 1] || null;\r\n      n = new StyleNode();\r\n      n['start'] = i + 1;\r\n      n['parent'] = p;\r\n      n['previous'] = previous;\r\n      p['rules'].push(n);\r\n    } else if (text[i] === CLOSE_BRACE) {\r\n      n['end'] = i + 1;\r\n      n = n['parent'] || root;\r\n    }\r\n  }\r\n  return root;\r\n}\r\n\r\n// add selectors/cssText to node tree\r\n/**\r\n * @param {StyleNode} node\r\n * @param {string} text\r\n * @return {StyleNode}\r\n */\r\nfunction parseCss(node, text) {\r\n  let t = text.substring(node['start'], node['end'] - 1);\r\n  node['parsedCssText'] = node['cssText'] = t.trim();\r\n  if (node['parent']) {\r\n    let ss = node['previous'] ? node['previous']['end'] : node['parent']['start'];\r\n    t = text.substring(ss, node['start'] - 1);\r\n    t = _expandUnicodeEscapes(t);\r\n    t = t.replace(RX.multipleSpaces, ' ');\r\n    // TODO(sorvell): ad hoc; make selector include only after last ;\r\n    // helps with mixin syntax\r\n    t = t.substring(t.lastIndexOf(';') + 1);\r\n    let s = node['parsedSelector'] = node['selector'] = t.trim();\r\n    node['atRule'] = (s.indexOf(AT_START) === 0);\r\n    // note, support a subset of rule types...\r\n    if (node['atRule']) {\r\n      if (s.indexOf(MEDIA_START) === 0) {\r\n        node['type'] = types.MEDIA_RULE;\r\n      } else if (s.match(RX.keyframesRule)) {\r\n        node['type'] = types.KEYFRAMES_RULE;\r\n        node['keyframesName'] =\r\n          node['selector'].split(RX.multipleSpaces).pop();\r\n      }\r\n    } else {\r\n      if (s.indexOf(VAR_START) === 0) {\r\n        node['type'] = types.MIXIN_RULE;\r\n      } else {\r\n        node['type'] = types.STYLE_RULE;\r\n      }\r\n    }\r\n  }\r\n  let r$ = node['rules'];\r\n  if (r$) {\r\n    for (let i = 0, l = r$.length, r;\r\n      (i < l) && (r = r$[i]); i++) {\r\n      parseCss(r, text);\r\n    }\r\n  }\r\n  return node;\r\n}\r\n\r\n/**\r\n * conversion of sort unicode escapes with spaces like `\\33 ` (and longer) into\r\n * expanded form that doesn't require trailing space `\\000033`\r\n * @param {string} s\r\n * @return {string}\r\n */\r\nfunction _expandUnicodeEscapes(s) {\r\n  return s.replace(/\\\\([0-9a-f]{1,6})\\s/gi, function() {\r\n    let code = arguments[1],\r\n      repeat = 6 - code.length;\r\n    while (repeat--) {\r\n      code = '0' + code;\r\n    }\r\n    return '\\\\' + code;\r\n  });\r\n}\r\n\r\n/**\r\n * stringify parsed css.\r\n * @param {StyleNode} node\r\n * @param {boolean=} preserveProperties\r\n * @param {string=} text\r\n * @return {string}\r\n */\r\nexport function stringify(node, preserveProperties, text = '') {\r\n  // calc rule cssText\r\n  let cssText = '';\r\n  if (node['cssText'] || node['rules']) {\r\n    let r$ = node['rules'];\r\n    if (r$ && !_hasMixinRules(r$)) {\r\n      for (let i = 0, l = r$.length, r;\r\n        (i < l) && (r = r$[i]); i++) {\r\n        cssText = stringify(r, preserveProperties, cssText);\r\n      }\r\n    } else {\r\n      cssText = preserveProperties ? node['cssText'] :\r\n        removeCustomProps(node['cssText']);\r\n      cssText = cssText.trim();\r\n      if (cssText) {\r\n        cssText = '  ' + cssText + '\\n';\r\n      }\r\n    }\r\n  }\r\n  // emit rule if there is cssText\r\n  if (cssText) {\r\n    if (node['selector']) {\r\n      text += node['selector'] + ' ' + OPEN_BRACE + '\\n';\r\n    }\r\n    text += cssText;\r\n    if (node['selector']) {\r\n      text += CLOSE_BRACE + '\\n\\n';\r\n    }\r\n  }\r\n  return text;\r\n}\r\n\r\n/**\r\n * @param {Array<StyleNode>} rules\r\n * @return {boolean}\r\n */\r\nfunction _hasMixinRules(rules) {\r\n  let r = rules[0];\r\n  return Boolean(r) && Boolean(r['selector']) && r['selector'].indexOf(VAR_START) === 0;\r\n}\r\n\r\n/**\r\n * @param {string} cssText\r\n * @return {string}\r\n */\r\nfunction removeCustomProps(cssText) {\r\n  cssText = removeCustomPropAssignment(cssText);\r\n  return removeCustomPropApply(cssText);\r\n}\r\n\r\n/**\r\n * @param {string} cssText\r\n * @return {string}\r\n */\r\nexport function removeCustomPropAssignment(cssText) {\r\n  return cssText\r\n    .replace(RX.customProp, '')\r\n    .replace(RX.mixinProp, '');\r\n}\r\n\r\n/**\r\n * @param {string} cssText\r\n * @return {string}\r\n */\r\nfunction removeCustomPropApply(cssText) {\r\n  return cssText\r\n    .replace(RX.mixinApply, '')\r\n    .replace(RX.varApply, '');\r\n}\r\n\r\n/** @enum {number} */\r\nexport const types = {\r\n  STYLE_RULE: 1,\r\n  KEYFRAMES_RULE: 7,\r\n  MEDIA_RULE: 4,\r\n  MIXIN_RULE: 1000\r\n}\r\n\r\nconst OPEN_BRACE = '{';\r\nconst CLOSE_BRACE = '}';\r\n\r\n// helper regexp's\r\nconst RX = {\r\n  comments: /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//gim,\r\n  port: /@import[^;]*;/gim,\r\n  customProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?(?:[;\\n]|$)/gim,\r\n  mixinProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?{[^}]*?}(?:[;\\n]|$)?/gim,\r\n  mixinApply: /@apply\\s*\\(?[^);]*\\)?\\s*(?:[;\\n]|$)?/gim,\r\n  varApply: /[^;:]*?:[^;]*?var\\([^;]*\\)(?:[;\\n]|$)?/gim,\r\n  keyframesRule: /^@[^\\s]*keyframes/,\r\n  multipleSpaces: /\\s+/g\r\n}\r\n\r\nconst VAR_START = '--';\r\nconst MEDIA_START = '@media';\r\nconst AT_START = '@';\r\n","/**\r\n@license\r\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\r\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\nCode distributed by Google as part of the polymer project is also\r\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n*/\r\n\r\n'use strict';\r\nimport templateMap from './template-map.js'\r\nimport {StyleNode} from './css-parse.js' // eslint-disable-line no-unused-vars\r\n\r\n/*\r\n * Utilities for handling invalidating apply-shim mixins for a given template.\r\n *\r\n * The invalidation strategy involves keeping track of the \"current\" version of a template's mixins, and updating that count when a mixin is invalidated.\r\n * The template\r\n */\r\n\r\n/** @const {string} */\r\nconst CURRENT_VERSION = '_applyShimCurrentVersion';\r\n\r\n/** @const {string} */\r\nconst NEXT_VERSION = '_applyShimNextVersion';\r\n\r\n/** @const {string} */\r\nconst VALIDATING_VERSION = '_applyShimValidatingVersion';\r\n\r\n/**\r\n * @const {Promise<void>}\r\n */\r\nconst promise = Promise.resolve();\r\n\r\n/**\r\n * @param {string} elementName\r\n */\r\nexport function invalidate(elementName){\r\n  let template = templateMap[elementName];\r\n  if (template) {\r\n    invalidateTemplate(template);\r\n  }\r\n}\r\n\r\n/**\r\n * This function can be called multiple times to mark a template invalid\r\n * and signal that the style inside must be regenerated.\r\n *\r\n * Use `startValidatingTemplate` to begin an asynchronous validation cycle.\r\n * During that cycle, call `templateIsValidating` to see if the template must\r\n * be revalidated\r\n * @param {HTMLTemplateElement} template\r\n */\r\nexport function invalidateTemplate(template) {\r\n  // default the current version to 0\r\n  template[CURRENT_VERSION] = template[CURRENT_VERSION] || 0;\r\n  // ensure the \"validating for\" flag exists\r\n  template[VALIDATING_VERSION] = template[VALIDATING_VERSION] || 0;\r\n  // increment the next version\r\n  template[NEXT_VERSION] = (template[NEXT_VERSION] || 0) + 1;\r\n}\r\n\r\n/**\r\n * @param {string} elementName\r\n * @return {boolean}\r\n */\r\nexport function isValid(elementName) {\r\n  let template = templateMap[elementName];\r\n  if (template) {\r\n    return templateIsValid(template);\r\n  }\r\n  return true;\r\n}\r\n\r\n/**\r\n * @param {HTMLTemplateElement} template\r\n * @return {boolean}\r\n */\r\nexport function templateIsValid(template) {\r\n  return template[CURRENT_VERSION] === template[NEXT_VERSION];\r\n}\r\n\r\n/**\r\n * @param {string} elementName\r\n * @return {boolean}\r\n */\r\nexport function isValidating(elementName) {\r\n  let template = templateMap[elementName];\r\n  if (template) {\r\n    return templateIsValidating(template);\r\n  }\r\n  return false;\r\n}\r\n\r\n/**\r\n * Returns true if the template is currently invalid and `startValidating` has been called since the last invalidation.\r\n * If false, the template must be validated.\r\n * @param {HTMLTemplateElement} template\r\n * @return {boolean}\r\n */\r\nexport function templateIsValidating(template) {\r\n  return !templateIsValid(template) && template[VALIDATING_VERSION] === template[NEXT_VERSION];\r\n}\r\n\r\n/**\r\n * the template is marked as `validating` for one microtask so that all instances\r\n * found in the tree crawl of `applyStyle` will update themselves,\r\n * but the template will only be updated once.\r\n * @param {string} elementName\r\n*/\r\nexport function startValidating(elementName) {\r\n  let template = templateMap[elementName];\r\n  startValidatingTemplate(template);\r\n}\r\n\r\n/**\r\n * Begin an asynchronous invalidation cycle.\r\n * This should be called after every validation of a template\r\n *\r\n * After one microtask, the template will be marked as valid until the next call to `invalidateTemplate`\r\n * @param {HTMLTemplateElement} template\r\n */\r\nexport function startValidatingTemplate(template) {\r\n  // remember that the current \"next version\" is the reason for this validation cycle\r\n  template[VALIDATING_VERSION] = template[NEXT_VERSION];\r\n  // however, there only needs to be one async task to clear the counters\r\n  if (!template._validating) {\r\n    template._validating = true;\r\n    promise.then(function() {\r\n      // sync the current version to let future invalidations cause a refresh cycle\r\n      template[CURRENT_VERSION] = template[NEXT_VERSION];\r\n      template._validating = false;\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * @return {boolean}\r\n */\r\nexport function elementsAreInvalid() {\r\n  for (let elementName in templateMap) {\r\n    let template = templateMap[elementName];\r\n    if (!templateIsValid(template)) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}","/**\r\n@license\r\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\r\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\nCode distributed by Google as part of the polymer project is also\r\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n*/\r\n\r\nexport const VAR_ASSIGN = /(?:^|[;\\s{]\\s*)(--[\\w-]*?)\\s*:\\s*(?:((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};{])+)|\\{([^}]*)\\}(?:(?=[;\\s}])|$))/gi;\r\nexport const MIXIN_MATCH = /(?:^|\\W+)@apply\\s*\\(?([^);\\n]*)\\)?/gi;\r\nexport const VAR_CONSUMED = /(--[\\w-]+)\\s*([:,;)]|$)/gi;\r\nexport const ANIMATION_MATCH = /(animation\\s*:)|(animation-name\\s*:)/;\r\nexport const MEDIA_MATCH = /@media\\s(.*)/;\r\nexport const IS_VAR = /^--/;\r\nexport const BRACKETED = /\\{[^}]*\\}/g;\r\nexport const HOST_PREFIX = '(?:^|[^.#[:])';\r\nexport const HOST_SUFFIX = '($|[.:[\\\\s>+~])';\r\n","/**\r\n@license\r\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\r\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\nCode distributed by Google as part of the polymer project is also\r\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n*/\r\n\r\n'use strict';\r\n\r\nexport let nativeShadow = !(window['ShadyDOM'] && window['ShadyDOM']['inUse']);\r\nexport let nativeCssVariables;\r\n\r\n/**\r\n * @param {(ShadyCSSOptions | ShadyCSSInterface)=} settings\r\n */\r\nfunction calcCssVariables(settings) {\r\n  if (settings && settings['shimcssproperties']) {\r\n    nativeCssVariables = false;\r\n  } else {\r\n    // chrome 49 has semi-working css vars, check if box-shadow works\r\n    // safari 9.1 has a recalc bug: https://bugs.webkit.org/show_bug.cgi?id=155782\r\n    // However, shim css custom properties are only supported with ShadyDOM enabled,\r\n    // so fall back on native if we do not detect ShadyDOM\r\n    nativeCssVariables = nativeShadow || Boolean(!navigator.userAgent.match('AppleWebKit/601') &&\r\n      window.CSS && CSS.supports && CSS.supports('box-shadow', '0 0 0 var(--foo)'));\r\n  }\r\n}\r\n\r\nif (window.ShadyCSS && window.ShadyCSS.nativeCss !== undefined) {\r\n  nativeCssVariables = window.ShadyCSS.nativeCss;\r\n} else if (window.ShadyCSS) {\r\n  calcCssVariables(window.ShadyCSS);\r\n  // reset window variable to let ShadyCSS API take its place\r\n  window.ShadyCSS = undefined;\r\n} else {\r\n  calcCssVariables(window['WebComponents'] && window['WebComponents']['flags']);\r\n}","/**\r\n@license\r\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\r\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\nCode distributed by Google as part of the polymer project is also\r\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n*/\r\n\r\n'use strict';\r\n\r\nimport {nativeShadow, nativeCssVariables} from './style-settings.js'\r\nimport {parse, stringify, types, StyleNode} from './css-parse.js' // eslint-disable-line no-unused-vars\r\nimport {MEDIA_MATCH} from './common-regex.js';\r\n\r\n/**\r\n * @param {string|StyleNode} rules\r\n * @param {function(StyleNode)=} callback\r\n * @return {string}\r\n */\r\nexport function toCssText (rules, callback) {\r\n  if (!rules) {\r\n    return '';\r\n  }\r\n  if (typeof rules === 'string') {\r\n    rules = parse(rules);\r\n  }\r\n  if (callback) {\r\n    forEachRule(rules, callback);\r\n  }\r\n  return stringify(rules, nativeCssVariables);\r\n}\r\n\r\n/**\r\n * @param {HTMLStyleElement} style\r\n * @return {StyleNode}\r\n */\r\nexport function rulesForStyle(style) {\r\n  if (!style['__cssRules'] && style.textContent) {\r\n    style['__cssRules'] = parse(style.textContent);\r\n  }\r\n  return style['__cssRules'] || null;\r\n}\r\n\r\n// Tests if a rule is a keyframes selector, which looks almost exactly\r\n// like a normal selector but is not (it has nothing to do with scoping\r\n// for example).\r\n/**\r\n * @param {StyleNode} rule\r\n * @return {boolean}\r\n */\r\nexport function isKeyframesSelector(rule) {\r\n  return Boolean(rule['parent']) &&\r\n  rule['parent']['type'] === types.KEYFRAMES_RULE;\r\n}\r\n\r\n/**\r\n * @param {StyleNode} node\r\n * @param {Function=} styleRuleCallback\r\n * @param {Function=} keyframesRuleCallback\r\n * @param {boolean=} onlyActiveRules\r\n */\r\nexport function forEachRule(node, styleRuleCallback, keyframesRuleCallback, onlyActiveRules) {\r\n  if (!node) {\r\n    return;\r\n  }\r\n  let skipRules = false;\r\n  let type = node['type'];\r\n  if (onlyActiveRules) {\r\n    if (type === types.MEDIA_RULE) {\r\n      let matchMedia = node['selector'].match(MEDIA_MATCH);\r\n      if (matchMedia) {\r\n        // if rule is a non matching @media rule, skip subrules\r\n        if (!window.matchMedia(matchMedia[1]).matches) {\r\n          skipRules = true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  if (type === types.STYLE_RULE) {\r\n    styleRuleCallback(node);\r\n  } else if (keyframesRuleCallback &&\r\n    type === types.KEYFRAMES_RULE) {\r\n    keyframesRuleCallback(node);\r\n  } else if (type === types.MIXIN_RULE) {\r\n    skipRules = true;\r\n  }\r\n  let r$ = node['rules'];\r\n  if (r$ && !skipRules) {\r\n    for (let i=0, l=r$.length, r; (i<l) && (r=r$[i]); i++) {\r\n      forEachRule(r, styleRuleCallback, keyframesRuleCallback, onlyActiveRules);\r\n    }\r\n  }\r\n}\r\n\r\n// add a string of cssText to the document.\r\n/**\r\n * @param {string} cssText\r\n * @param {string} moniker\r\n * @param {Node} target\r\n * @param {Node} contextNode\r\n * @return {HTMLStyleElement}\r\n */\r\nexport function applyCss(cssText, moniker, target, contextNode) {\r\n  let style = createScopeStyle(cssText, moniker);\r\n  applyStyle(style, target, contextNode);\r\n  return style;\r\n}\r\n\r\n/**\r\n * @param {string} cssText\r\n * @param {string} moniker\r\n * @return {HTMLStyleElement}\r\n */\r\nexport function createScopeStyle(cssText, moniker) {\r\n  let style = /** @type {HTMLStyleElement} */(document.createElement('style'));\r\n  if (moniker) {\r\n    style.setAttribute('scope', moniker);\r\n  }\r\n  style.textContent = cssText;\r\n  return style;\r\n}\r\n\r\n/**\r\n * Track the position of the last added style for placing placeholders\r\n * @type {Node}\r\n */\r\nlet lastHeadApplyNode = null;\r\n\r\n// insert a comment node as a styling position placeholder.\r\n/**\r\n * @param {string} moniker\r\n * @return {!Comment}\r\n */\r\nexport function applyStylePlaceHolder(moniker) {\r\n  let placeHolder = document.createComment(' Shady DOM styles for ' +\r\n    moniker + ' ');\r\n  let after = lastHeadApplyNode ?\r\n    lastHeadApplyNode['nextSibling'] : null;\r\n  let scope = document.head;\r\n  scope.insertBefore(placeHolder, after || scope.firstChild);\r\n  lastHeadApplyNode = placeHolder;\r\n  return placeHolder;\r\n}\r\n\r\n/**\r\n * @param {HTMLStyleElement} style\r\n * @param {?Node} target\r\n * @param {?Node} contextNode\r\n */\r\nexport function applyStyle(style, target, contextNode) {\r\n  target = target || document.head;\r\n  let after = (contextNode && contextNode.nextSibling) ||\r\n    target.firstChild;\r\n  target.insertBefore(style, after);\r\n  if (!lastHeadApplyNode) {\r\n    lastHeadApplyNode = style;\r\n  } else {\r\n    // only update lastHeadApplyNode if the new style is inserted after the old lastHeadApplyNode\r\n    let position = style.compareDocumentPosition(lastHeadApplyNode);\r\n    if (position === Node.DOCUMENT_POSITION_PRECEDING) {\r\n      lastHeadApplyNode = style;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @param {string} buildType\r\n * @return {boolean}\r\n */\r\nexport function isTargetedBuild(buildType) {\r\n  return nativeShadow ? buildType === 'shadow' : buildType === 'shady';\r\n}\r\n\r\n/**\r\n * @param {Element} element\r\n * @return {?string}\r\n */\r\nexport function getCssBuildType(element) {\r\n  return element.getAttribute('css-build');\r\n}\r\n\r\n/**\r\n * Walk from text[start] matching parens and\r\n * returns position of the outer end paren\r\n * @param {string} text\r\n * @param {number} start\r\n * @return {number}\r\n */\r\nfunction findMatchingParen(text, start) {\r\n  let level = 0;\r\n  for (let i=start, l=text.length; i < l; i++) {\r\n    if (text[i] === '(') {\r\n      level++;\r\n    } else if (text[i] === ')') {\r\n      if (--level === 0) {\r\n        return i;\r\n      }\r\n    }\r\n  }\r\n  return -1;\r\n}\r\n\r\n/**\r\n * @param {string} str\r\n * @param {function(string, string, string, string)} callback\r\n */\r\nexport function processVariableAndFallback(str, callback) {\r\n  // find 'var('\r\n  let start = str.indexOf('var(');\r\n  if (start === -1) {\r\n    // no var?, everything is prefix\r\n    return callback(str, '', '', '');\r\n  }\r\n  //${prefix}var(${inner})${suffix}\r\n  let end = findMatchingParen(str, start + 3);\r\n  let inner = str.substring(start + 4, end);\r\n  let prefix = str.substring(0, start);\r\n  // suffix may have other variables\r\n  let suffix = processVariableAndFallback(str.substring(end + 1), callback);\r\n  let comma = inner.indexOf(',');\r\n  // value and fallback args should be trimmed to match in property lookup\r\n  if (comma === -1) {\r\n    // variable, no fallback\r\n    return callback(prefix, inner.trim(), '', suffix);\r\n  }\r\n  // var(${value},${fallback})\r\n  let value = inner.substring(0, comma).trim();\r\n  let fallback = inner.substring(comma + 1).trim();\r\n  return callback(prefix, value, fallback, suffix);\r\n}\r\n\r\n/**\r\n * @param {Element} element\r\n * @param {string} value\r\n */\r\nexport function setElementClassRaw(element, value) {\r\n  // use native setAttribute provided by ShadyDOM when setAttribute is patched\r\n  if (nativeShadow) {\r\n    element.setAttribute('class', value);\r\n  } else {\r\n    window['ShadyDOM']['nativeMethods']['setAttribute'].call(element, 'class', value);\r\n  }\r\n}\r\n\r\n/**\r\n * @param {Element | {is: string, extends: string}} element\r\n * @return {{is: string, typeExtension: string}}\r\n */\r\nexport function getIsExtends(element) {\r\n  let localName = element['localName'];\r\n  let is = '', typeExtension = '';\r\n  /*\r\n  NOTE: technically, this can be wrong for certain svg elements\r\n  with `-` in the name like `<font-face>`\r\n  */\r\n  if (localName) {\r\n    if (localName.indexOf('-') > -1) {\r\n      is = localName;\r\n    } else {\r\n      typeExtension = localName;\r\n      is = (element.getAttribute && element.getAttribute('is')) || '';\r\n    }\r\n  } else {\r\n    is = /** @type {?} */(element).is;\r\n    typeExtension = /** @type {?} */(element).extends;\r\n  }\r\n  return {is, typeExtension};\r\n}\r\n","/**\r\n@license\r\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\r\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\nCode distributed by Google as part of the polymer project is also\r\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n*/\r\n\r\n'use strict';\r\n\r\n/** @type {Promise<void>} */\r\nlet readyPromise = null;\r\n\r\n/** @type {?function(?function())} */\r\nlet whenReady = window['HTMLImports'] && window['HTMLImports']['whenReady'] || null;\r\n\r\n/** @type {function()} */\r\nlet resolveFn;\r\n\r\n/**\r\n * @param {?function()} callback\r\n */\r\nexport default function documentWait(callback) {\r\n  requestAnimationFrame(function() {\r\n    if (whenReady) {\r\n      whenReady(callback)\r\n    } else {\r\n      if (!readyPromise) {\r\n        readyPromise = new Promise((resolve) => {resolveFn = resolve});\r\n        if (document.readyState === 'complete') {\r\n          resolveFn();\r\n        } else {\r\n          document.addEventListener('readystatechange', () => {\r\n            if (document.readyState === 'complete') {\r\n              resolveFn();\r\n            }\r\n          });\r\n        }\r\n      }\r\n      readyPromise.then(function(){ callback && callback(); });\r\n    }\r\n  });\r\n}\r\n","/**\r\n@license\r\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\r\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\nCode distributed by Google as part of the polymer project is also\r\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n*/\r\n\r\n'use strict';\r\n\r\nimport {StyleNode} from './css-parse.js' // eslint-disable-line no-unused-vars\r\nimport * as StyleUtil from './style-util.js'\r\nimport {nativeShadow} from './style-settings.js'\r\n\r\n/* Transforms ShadowDOM styling into ShadyDOM styling\r\n\r\n* scoping:\r\n\r\n  * elements in scope get scoping selector class=\"x-foo-scope\"\r\n  * selectors re-written as follows:\r\n\r\n    div button -> div.x-foo-scope button.x-foo-scope\r\n\r\n* :host -> scopeName\r\n\r\n* :host(...) -> scopeName...\r\n\r\n* ::slotted(...) -> scopeName > ...\r\n\r\n* ...:dir(ltr|rtl) -> [dir=\"ltr|rtl\"] ..., ...[dir=\"ltr|rtl\"]\r\n\r\n* :host(:dir[rtl]) -> scopeName:dir(rtl) -> [dir=\"rtl\"] scopeName, scopeName[dir=\"rtl\"]\r\n\r\n*/\r\nconst SCOPE_NAME = 'style-scope';\r\n\r\nclass StyleTransformer {\r\n  get SCOPE_NAME() {\r\n    return SCOPE_NAME;\r\n  }\r\n  // Given a node and scope name, add a scoping class to each node\r\n  // in the tree. This facilitates transforming css into scoped rules.\r\n  dom(node, scope, shouldRemoveScope) {\r\n    // one time optimization to skip scoping...\r\n    if (node['__styleScoped']) {\r\n      node['__styleScoped'] = null;\r\n    } else {\r\n      this._transformDom(node, scope || '', shouldRemoveScope);\r\n    }\r\n  }\r\n\r\n  _transformDom(node, selector, shouldRemoveScope) {\r\n    if (node.nodeType === Node.ELEMENT_NODE) {\r\n      this.element(node, selector, shouldRemoveScope);\r\n    }\r\n    let c$ = (node.localName === 'template') ?\r\n      (node.content || node._content).childNodes :\r\n      node.children || node.childNodes;\r\n    if (c$) {\r\n      for (let i=0; i<c$.length; i++) {\r\n        this._transformDom(c$[i], selector, shouldRemoveScope);\r\n      }\r\n    }\r\n  }\r\n\r\n  element(element, scope, shouldRemoveScope) {\r\n    // note: if using classes, we add both the general 'style-scope' class\r\n    // as well as the specific scope. This enables easy filtering of all\r\n    // `style-scope` elements\r\n    if (scope) {\r\n      // note: svg on IE does not have classList so fallback to class\r\n      if (element.classList) {\r\n        if (shouldRemoveScope) {\r\n          element.classList.remove(SCOPE_NAME);\r\n          element.classList.remove(scope);\r\n        } else {\r\n          element.classList.add(SCOPE_NAME);\r\n          element.classList.add(scope);\r\n        }\r\n      } else if (element.getAttribute) {\r\n        let c = element.getAttribute(CLASS);\r\n        if (shouldRemoveScope) {\r\n          if (c) {\r\n            let newValue = c.replace(SCOPE_NAME, '').replace(scope, '');\r\n            StyleUtil.setElementClassRaw(element, newValue);\r\n          }\r\n        } else {\r\n          let newValue = (c ? c + ' ' : '') + SCOPE_NAME + ' ' + scope;\r\n          StyleUtil.setElementClassRaw(element, newValue);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  elementStyles(element, styleRules, callback) {\r\n    let cssBuildType = element['__cssBuild'];\r\n    // no need to shim selectors if settings.useNativeShadow, also\r\n    // a shady css build will already have transformed selectors\r\n    // NOTE: This method may be called as part of static or property shimming.\r\n    // When there is a targeted build it will not be called for static shimming,\r\n    // but when the property shim is used it is called and should opt out of\r\n    // static shimming work when a proper build exists.\r\n    let cssText = '';\r\n    if (nativeShadow || cssBuildType === 'shady') {\r\n      cssText = StyleUtil.toCssText(styleRules, callback);\r\n    } else {\r\n      let {is, typeExtension} = StyleUtil.getIsExtends(element);\r\n      cssText = this.css(styleRules, is, typeExtension, callback) + '\\n\\n';\r\n    }\r\n    return cssText.trim();\r\n  }\r\n\r\n  // Given a string of cssText and a scoping string (scope), returns\r\n  // a string of scoped css where each selector is transformed to include\r\n  // a class created from the scope. ShadowDOM selectors are also transformed\r\n  // (e.g. :host) to use the scoping selector.\r\n  css(rules, scope, ext, callback) {\r\n    let hostScope = this._calcHostScope(scope, ext);\r\n    scope = this._calcElementScope(scope);\r\n    let self = this;\r\n    return StyleUtil.toCssText(rules, function(/** StyleNode */rule) {\r\n      if (!rule.isScoped) {\r\n        self.rule(rule, scope, hostScope);\r\n        rule.isScoped = true;\r\n      }\r\n      if (callback) {\r\n        callback(rule, scope, hostScope);\r\n      }\r\n    });\r\n  }\r\n\r\n  _calcElementScope(scope) {\r\n    if (scope) {\r\n      return CSS_CLASS_PREFIX + scope;\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  _calcHostScope(scope, ext) {\r\n    return ext ? `[is=${scope}]` : scope;\r\n  }\r\n\r\n  rule(rule, scope, hostScope) {\r\n    this._transformRule(rule, this._transformComplexSelector,\r\n      scope, hostScope);\r\n  }\r\n\r\n  /**\r\n   * transforms a css rule to a scoped rule.\r\n   *\r\n   * @param {StyleNode} rule\r\n   * @param {Function} transformer\r\n   * @param {string=} scope\r\n   * @param {string=} hostScope\r\n   */\r\n  _transformRule(rule, transformer, scope, hostScope) {\r\n    // NOTE: save transformedSelector for subsequent matching of elements\r\n    // against selectors (e.g. when calculating style properties)\r\n    rule['selector'] = rule.transformedSelector =\r\n      this._transformRuleCss(rule, transformer, scope, hostScope);\r\n  }\r\n\r\n  /**\r\n   * @param {StyleNode} rule\r\n   * @param {Function} transformer\r\n   * @param {string=} scope\r\n   * @param {string=} hostScope\r\n   */\r\n  _transformRuleCss(rule, transformer, scope, hostScope) {\r\n    let p$ = rule['selector'].split(COMPLEX_SELECTOR_SEP);\r\n    // we want to skip transformation of rules that appear in keyframes,\r\n    // because they are keyframe selectors, not element selectors.\r\n    if (!StyleUtil.isKeyframesSelector(rule)) {\r\n      for (let i=0, l=p$.length, p; (i<l) && (p=p$[i]); i++) {\r\n        p$[i] = transformer.call(this, p, scope, hostScope);\r\n      }\r\n    }\r\n    return p$.join(COMPLEX_SELECTOR_SEP);\r\n  }\r\n\r\n/**\r\n * @param {string} selector\r\n * @param {string} scope\r\n * @param {string=} hostScope\r\n */\r\n  _transformComplexSelector(selector, scope, hostScope) {\r\n    let stop = false;\r\n    selector = selector.trim();\r\n    // Remove spaces inside of selectors like `:nth-of-type` because it confuses SIMPLE_SELECTOR_SEP\r\n    selector = selector.replace(NTH, (m, type, inner) => `:${type}(${inner.replace(/\\s/g, '')})`);\r\n    selector = selector.replace(SLOTTED_START, `${HOST} $1`);\r\n    selector = selector.replace(SIMPLE_SELECTOR_SEP, (m, c, s) => {\r\n      if (!stop) {\r\n        let info = this._transformCompoundSelector(s, c, scope, hostScope);\r\n        stop = stop || info.stop;\r\n        c = info.combinator;\r\n        s = info.value;\r\n      }\r\n      return c + s;\r\n    });\r\n    return selector;\r\n  }\r\n\r\n  _transformCompoundSelector(selector, combinator, scope, hostScope) {\r\n    // replace :host with host scoping class\r\n    let slottedIndex = selector.indexOf(SLOTTED);\r\n    if (selector.indexOf(HOST) >= 0) {\r\n      selector = this._transformHostSelector(selector, hostScope);\r\n    // replace other selectors with scoping class\r\n    } else if (slottedIndex !== 0) {\r\n      selector = scope ? this._transformSimpleSelector(selector, scope) :\r\n        selector;\r\n    }\r\n    // mark ::slotted() scope jump to replace with descendant selector + arg\r\n    // also ignore left-side combinator\r\n    let slotted = false;\r\n    if (slottedIndex >= 0) {\r\n      combinator = '';\r\n      slotted = true;\r\n    }\r\n    // process scope jumping selectors up to the scope jump and then stop\r\n    let stop;\r\n    if (slotted) {\r\n      stop = true;\r\n      if (slotted) {\r\n        // .zonk ::slotted(.foo) -> .zonk.scope > .foo\r\n        selector = selector.replace(SLOTTED_PAREN, (m, paren) => ` > ${paren}`);\r\n      }\r\n    }\r\n    selector = selector.replace(DIR_PAREN, (m, before, dir) =>\r\n      `[dir=\"${dir}\"] ${before}, ${before}[dir=\"${dir}\"]`);\r\n    return {value: selector, combinator, stop};\r\n  }\r\n\r\n  _transformSimpleSelector(selector, scope) {\r\n    let p$ = selector.split(PSEUDO_PREFIX);\r\n    p$[0] += scope;\r\n    return p$.join(PSEUDO_PREFIX);\r\n  }\r\n\r\n  // :host(...) -> scopeName...\r\n  _transformHostSelector(selector, hostScope) {\r\n    let m = selector.match(HOST_PAREN);\r\n    let paren = m && m[2].trim() || '';\r\n    if (paren) {\r\n      if (!paren[0].match(SIMPLE_SELECTOR_PREFIX)) {\r\n        // paren starts with a type selector\r\n        let typeSelector = paren.split(SIMPLE_SELECTOR_PREFIX)[0];\r\n        // if the type selector is our hostScope then avoid pre-pending it\r\n        if (typeSelector === hostScope) {\r\n          return paren;\r\n        // otherwise, this selector should not match in this scope so\r\n        // output a bogus selector.\r\n        } else {\r\n          return SELECTOR_NO_MATCH;\r\n        }\r\n      } else {\r\n        // make sure to do a replace here to catch selectors like:\r\n        // `:host(.foo)::before`\r\n        return selector.replace(HOST_PAREN, function(m, host, paren) {\r\n          return hostScope + paren;\r\n        });\r\n      }\r\n    // if no paren, do a straight :host replacement.\r\n    // TODO(sorvell): this should not strictly be necessary but\r\n    // it's needed to maintain support for `:host[foo]` type selectors\r\n    // which have been improperly used under Shady DOM. This should be\r\n    // deprecated.\r\n    } else {\r\n      return selector.replace(HOST, hostScope);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {StyleNode} rule\r\n   */\r\n  documentRule(rule) {\r\n    // reset selector in case this is redone.\r\n    rule['selector'] = rule['parsedSelector'];\r\n    this.normalizeRootSelector(rule);\r\n    this._transformRule(rule, this._transformDocumentSelector);\r\n  }\r\n\r\n  /**\r\n   * @param {StyleNode} rule\r\n   */\r\n  normalizeRootSelector(rule) {\r\n    if (rule['selector'] === ROOT) {\r\n      rule['selector'] = 'html';\r\n    }\r\n  }\r\n\r\n/**\r\n * @param {string} selector\r\n */\r\n  _transformDocumentSelector(selector) {\r\n    return selector.match(SLOTTED) ?\r\n      this._transformComplexSelector(selector, SCOPE_DOC_SELECTOR) :\r\n      this._transformSimpleSelector(selector.trim(), SCOPE_DOC_SELECTOR);\r\n  }\r\n}\r\n\r\nlet NTH = /:(nth[-\\w]+)\\(([^)]+)\\)/;\r\nlet SCOPE_DOC_SELECTOR = `:not(.${SCOPE_NAME})`;\r\nlet COMPLEX_SELECTOR_SEP = ',';\r\nlet SIMPLE_SELECTOR_SEP = /(^|[\\s>+~]+)((?:\\[.+?\\]|[^\\s>+~=[])+)/g;\r\nlet SIMPLE_SELECTOR_PREFIX = /[[.:#*]/;\r\nlet HOST = ':host';\r\nlet ROOT = ':root';\r\nlet SLOTTED = '::slotted';\r\nlet SLOTTED_START = new RegExp(`^(${SLOTTED})`);\r\n// NOTE: this supports 1 nested () pair for things like\r\n// :host(:not([selected]), more general support requires\r\n// parsing which seems like overkill\r\nlet HOST_PAREN = /(:host)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\r\n// similar to HOST_PAREN\r\nlet SLOTTED_PAREN = /(?:::slotted)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\r\nlet DIR_PAREN = /(.*):dir\\((?:(ltr|rtl))\\)/;\r\nlet CSS_CLASS_PREFIX = '.';\r\nlet PSEUDO_PREFIX = ':';\r\nlet CLASS = 'class';\r\nlet SELECTOR_NO_MATCH = 'should_not_match';\r\n\r\nexport default new StyleTransformer()","/**\r\n@license\r\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\r\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\nCode distributed by Google as part of the polymer project is also\r\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n*/\r\n\r\n'use strict';\r\n\r\nimport {nativeShadow} from './style-settings.js'\r\nimport StyleTransformer from './style-transformer.js'\r\nimport {getIsExtends} from './style-util.js'\r\n\r\nexport let flush = function() {};\r\n\r\n/**\r\n * @param {HTMLElement} element\r\n * @return {!Array<string>}\r\n */\r\nfunction getClasses(element) {\r\n  let classes = [];\r\n  if (element.classList) {\r\n    classes = Array.from(element.classList);\r\n  } else if (element instanceof window['SVGElement'] && element.hasAttribute('class')) {\r\n    classes = element.getAttribute('class').split(/\\s+/);\r\n  }\r\n  return classes;\r\n}\r\n\r\n/**\r\n * @param {HTMLElement} element\r\n * @return {string}\r\n */\r\nfunction getCurrentScope(element) {\r\n  let classes = getClasses(element);\r\n  let idx = classes.indexOf(StyleTransformer.SCOPE_NAME);\r\n  if (idx > -1) {\r\n    return classes[idx + 1];\r\n  }\r\n  return '';\r\n}\r\n\r\n/**\r\n * @param {Array<MutationRecord|null>|null} mxns\r\n */\r\nfunction handler(mxns) {\r\n  for (let x=0; x < mxns.length; x++) {\r\n    let mxn = mxns[x];\r\n    if (mxn.target === document.documentElement ||\r\n      mxn.target === document.head) {\r\n      continue;\r\n    }\r\n    for (let i=0; i < mxn.addedNodes.length; i++) {\r\n      let n = mxn.addedNodes[i];\r\n      if (n.nodeType !== Node.ELEMENT_NODE) {\r\n        continue;\r\n      }\r\n      n = /** @type {HTMLElement} */(n); // eslint-disable-line no-self-assign\r\n      let root = n.getRootNode();\r\n      let currentScope = getCurrentScope(n);\r\n      // node was scoped, but now is in document\r\n      if (currentScope && root === n.ownerDocument) {\r\n        StyleTransformer.dom(n, currentScope, true);\r\n      } else if (root.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\r\n        let newScope;\r\n        let host = /** @type {ShadowRoot} */(root).host;\r\n        // element may no longer be in a shadowroot\r\n        if (!host) {\r\n          continue;\r\n        }\r\n        newScope = getIsExtends(host).is;\r\n        if (currentScope === newScope) {\r\n          continue;\r\n        }\r\n        if (currentScope) {\r\n          StyleTransformer.dom(n, currentScope, true);\r\n        }\r\n        StyleTransformer.dom(n, newScope);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nif (!nativeShadow) {\r\n  let observer = new MutationObserver(handler);\r\n  let start = (node) => {\r\n    observer.observe(node, {childList: true, subtree: true});\r\n  }\r\n  let nativeCustomElements = (window['customElements'] &&\r\n    !window['customElements']['polyfillWrapFlushCallback']);\r\n  // need to start immediately with native custom elements\r\n  // TODO(dfreedm): with polyfilled HTMLImports and native custom elements\r\n  // excessive mutations may be observed; this can be optimized via cooperation\r\n  // with the HTMLImports polyfill.\r\n  if (nativeCustomElements) {\r\n    start(document);\r\n  } else {\r\n    let delayedStart = () => {\r\n      start(document.body);\r\n    }\r\n    // use polyfill timing if it's available\r\n    if (window['HTMLImports']) {\r\n      window['HTMLImports']['whenReady'](delayedStart);\r\n    // otherwise push beyond native imports being ready\r\n    // which requires RAF + readystate interactive.\r\n    } else {\r\n      requestAnimationFrame(function() {\r\n        if (document.readyState === 'loading') {\r\n          let listener = function() {\r\n            delayedStart();\r\n            document.removeEventListener('readystatechange', listener);\r\n          }\r\n          document.addEventListener('readystatechange', listener);\r\n        } else {\r\n          delayedStart();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  flush = function() {\r\n    handler(observer.takeRecords());\r\n  }\r\n}\r\n","/**\r\n@license\r\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\r\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\nCode distributed by Google as part of the polymer project is also\r\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n*/\r\n\r\n'use strict';\r\n\r\nimport {StyleNode} from './css-parse.js' // eslint-disable-line no-unused-vars\r\n\r\n/** @const {string} */\r\nconst infoKey = '__styleInfo';\r\n\r\nexport default class StyleInfo {\r\n  /**\r\n   * @param {Element} node\r\n   * @return {StyleInfo}\r\n   */\r\n  static get(node) {\r\n    if (node) {\r\n      return node[infoKey];\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n  /**\r\n   * @param {!Element} node\r\n   * @param {StyleInfo} styleInfo\r\n   * @return {StyleInfo}\r\n   */\r\n  static set(node, styleInfo) {\r\n    node[infoKey] = styleInfo;\r\n    return styleInfo;\r\n  }\r\n  /**\r\n   * @param {StyleNode} ast\r\n   * @param {Node=} placeholder\r\n   * @param {Array<string>=} ownStylePropertyNames\r\n   * @param {string=} elementName\r\n   * @param {string=} typeExtension\r\n   * @param {string=} cssBuild\r\n   */\r\n  constructor(ast, placeholder, ownStylePropertyNames, elementName, typeExtension, cssBuild) {\r\n    /** @type {StyleNode} */\r\n    this.styleRules = ast || null;\r\n    /** @type {Node} */\r\n    this.placeholder = placeholder || null;\r\n    /** @type {!Array<string>} */\r\n    this.ownStylePropertyNames = ownStylePropertyNames || [];\r\n    /** @type {Array<Object>} */\r\n    this.overrideStyleProperties = null;\r\n    /** @type {string} */\r\n    this.elementName = elementName || '';\r\n    /** @type {string} */\r\n    this.cssBuild = cssBuild || '';\r\n    /** @type {string} */\r\n    this.typeExtension = typeExtension || '';\r\n    /** @type {Object<string, string>} */\r\n    this.styleProperties = null;\r\n    /** @type {?string} */\r\n    this.scopeSelector = null;\r\n    /** @type {HTMLStyleElement} */\r\n    this.customStyle = null;\r\n  }\r\n  _getStyleRules() {\r\n    return this.styleRules;\r\n  }\r\n}\r\n\r\nStyleInfo.prototype['_getStyleRules'] = StyleInfo.prototype._getStyleRules;","/**\r\n@license\r\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\r\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\nCode distributed by Google as part of the polymer project is also\r\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n*/\r\n\r\n'use strict';\r\n\r\nimport {removeCustomPropAssignment, StyleNode} from './css-parse.js' // eslint-disable-line no-unused-vars\r\nimport {nativeShadow} from './style-settings.js'\r\nimport StyleTransformer from './style-transformer.js'\r\nimport * as StyleUtil from './style-util.js'\r\nimport * as RX from './common-regex.js'\r\nimport StyleInfo from './style-info.js'\r\n\r\n// TODO: dedupe with shady\r\n/**\r\n * @const {function(string):boolean}\r\n */\r\nconst matchesSelector = ((p) => p.matches || p.matchesSelector ||\r\n  p.mozMatchesSelector || p.msMatchesSelector ||\r\np.oMatchesSelector || p.webkitMatchesSelector)(window.Element.prototype);\r\n\r\nconst IS_IE = navigator.userAgent.match('Trident');\r\n\r\nconst XSCOPE_NAME = 'x-scope';\r\n\r\nclass StyleProperties {\r\n  get XSCOPE_NAME() {\r\n    return XSCOPE_NAME;\r\n  }\r\n/**\r\n * decorates styles with rule info and returns an array of used style property names\r\n *\r\n * @param {StyleNode} rules\r\n * @return {Array<string>}\r\n */\r\n  decorateStyles(rules) {\r\n    let self = this, props = {}, keyframes = [], ruleIndex = 0;\r\n    StyleUtil.forEachRule(rules, function(rule) {\r\n      self.decorateRule(rule);\r\n      // mark in-order position of ast rule in styles block, used for cache key\r\n      rule.index = ruleIndex++;\r\n      self.collectPropertiesInCssText(rule.propertyInfo.cssText, props);\r\n    }, function onKeyframesRule(rule) {\r\n      keyframes.push(rule);\r\n    });\r\n    // Cache all found keyframes rules for later reference:\r\n    rules._keyframes = keyframes;\r\n    // return this list of property names *consumes* in these styles.\r\n    let names = [];\r\n    for (let i in props) {\r\n      names.push(i);\r\n    }\r\n    return names;\r\n  }\r\n\r\n  // decorate a single rule with property info\r\n  decorateRule(rule) {\r\n    if (rule.propertyInfo) {\r\n      return rule.propertyInfo;\r\n    }\r\n    let info = {}, properties = {};\r\n    let hasProperties = this.collectProperties(rule, properties);\r\n    if (hasProperties) {\r\n      info.properties = properties;\r\n      // TODO(sorvell): workaround parser seeing mixins as additional rules\r\n      rule['rules'] = null;\r\n    }\r\n    info.cssText = this.collectCssText(rule);\r\n    rule.propertyInfo = info;\r\n    return info;\r\n  }\r\n\r\n  // collects the custom properties from a rule's cssText\r\n  collectProperties(rule, properties) {\r\n    let info = rule.propertyInfo;\r\n    if (info) {\r\n      if (info.properties) {\r\n        Object.assign(properties, info.properties);\r\n        return true;\r\n      }\r\n    } else {\r\n      let m, rx = RX.VAR_ASSIGN;\r\n      let cssText = rule['parsedCssText'];\r\n      let value;\r\n      let any;\r\n      while ((m = rx.exec(cssText))) {\r\n        // note: group 2 is var, 3 is mixin\r\n        value = (m[2] || m[3]).trim();\r\n        // value of 'inherit' or 'unset' is equivalent to not setting the property here\r\n        if (value !== 'inherit' || value !== 'unset') {\r\n          properties[m[1].trim()] = value;\r\n        }\r\n        any = true;\r\n      }\r\n      return any;\r\n    }\r\n\r\n  }\r\n\r\n  // returns cssText of properties that consume variables/mixins\r\n  collectCssText(rule) {\r\n    return this.collectConsumingCssText(rule['parsedCssText']);\r\n  }\r\n\r\n  // NOTE: we support consumption inside mixin assignment\r\n  // but not production, so strip out {...}\r\n  collectConsumingCssText(cssText) {\r\n    return cssText.replace(RX.BRACKETED, '')\r\n      .replace(RX.VAR_ASSIGN, '');\r\n  }\r\n\r\n  collectPropertiesInCssText(cssText, props) {\r\n    let m;\r\n    while ((m = RX.VAR_CONSUMED.exec(cssText))) {\r\n      let name = m[1];\r\n      // This regex catches all variable names, and following non-whitespace char\r\n      // If next char is not ':', then variable is a consumer\r\n      if (m[2] !== ':') {\r\n        props[name] = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  // turns custom properties into realized values.\r\n  reify(props) {\r\n    // big perf optimization here: reify only *own* properties\r\n    // since this object has __proto__ of the element's scope properties\r\n    let names = Object.getOwnPropertyNames(props);\r\n    for (let i=0, n; i < names.length; i++) {\r\n      n = names[i];\r\n      props[n] = this.valueForProperty(props[n], props);\r\n    }\r\n  }\r\n\r\n  // given a property value, returns the reified value\r\n  // a property value may be:\r\n  // (1) a literal value like: red or 5px;\r\n  // (2) a variable value like: var(--a), var(--a, red), or var(--a, --b) or\r\n  // var(--a, var(--b));\r\n  // (3) a literal mixin value like { properties }. Each of these properties\r\n  // can have values that are: (a) literal, (b) variables, (c) @apply mixins.\r\n  valueForProperty(property, props) {\r\n    // case (1) default\r\n    // case (3) defines a mixin and we have to reify the internals\r\n    if (property) {\r\n      if (property.indexOf(';') >=0) {\r\n        property = this.valueForProperties(property, props);\r\n      } else {\r\n        // case (2) variable\r\n        let self = this;\r\n        let fn = function(prefix, value, fallback, suffix) {\r\n          if (!value) {\r\n            return prefix + suffix;\r\n          }\r\n          let propertyValue = self.valueForProperty(props[value], props);\r\n          // if value is \"initial\", then the variable should be treated as unset\r\n          if (!propertyValue || propertyValue === 'initial') {\r\n            // fallback may be --a or var(--a) or literal\r\n            propertyValue = self.valueForProperty(props[fallback] || fallback, props) ||\r\n            fallback;\r\n          } else if (propertyValue === 'apply-shim-inherit') {\r\n            // CSS build will replace `inherit` with `apply-shim-inherit`\r\n            // for use with native css variables.\r\n            // Since we have full control, we can use `inherit` directly.\r\n            propertyValue = 'inherit';\r\n          }\r\n          return prefix + (propertyValue || '') + suffix;\r\n        };\r\n        property = StyleUtil.processVariableAndFallback(property, fn);\r\n      }\r\n    }\r\n    return property && property.trim() || '';\r\n  }\r\n\r\n  // note: we do not yet support mixin within mixin\r\n  valueForProperties(property, props) {\r\n    let parts = property.split(';');\r\n    for (let i=0, p, m; i<parts.length; i++) {\r\n      if ((p = parts[i])) {\r\n        RX.MIXIN_MATCH.lastIndex = 0;\r\n        m = RX.MIXIN_MATCH.exec(p);\r\n        if (m) {\r\n          p = this.valueForProperty(props[m[1]], props);\r\n        } else {\r\n          let colon = p.indexOf(':');\r\n          if (colon !== -1) {\r\n            let pp = p.substring(colon);\r\n            pp = pp.trim();\r\n            pp = this.valueForProperty(pp, props) || pp;\r\n            p = p.substring(0, colon) + pp;\r\n          }\r\n        }\r\n        parts[i] = (p && p.lastIndexOf(';') === p.length - 1) ?\r\n          // strip trailing ;\r\n          p.slice(0, -1) :\r\n          p || '';\r\n      }\r\n    }\r\n    return parts.join(';');\r\n  }\r\n\r\n  applyProperties(rule, props) {\r\n    let output = '';\r\n    // dynamically added sheets may not be decorated so ensure they are.\r\n    if (!rule.propertyInfo) {\r\n      this.decorateRule(rule);\r\n    }\r\n    if (rule.propertyInfo.cssText) {\r\n      output = this.valueForProperties(rule.propertyInfo.cssText, props);\r\n    }\r\n    rule['cssText'] = output;\r\n  }\r\n\r\n  // Apply keyframe transformations to the cssText of a given rule. The\r\n  // keyframeTransforms object is a map of keyframe names to transformer\r\n  // functions which take in cssText and spit out transformed cssText.\r\n  applyKeyframeTransforms(rule, keyframeTransforms) {\r\n    let input = rule['cssText'];\r\n    let output = rule['cssText'];\r\n    if (rule.hasAnimations == null) {\r\n      // Cache whether or not the rule has any animations to begin with:\r\n      rule.hasAnimations = RX.ANIMATION_MATCH.test(input);\r\n    }\r\n    // If there are no animations referenced, we can skip transforms:\r\n    if (rule.hasAnimations) {\r\n      let transform;\r\n      // If we haven't transformed this rule before, we iterate over all\r\n      // transforms:\r\n      if (rule.keyframeNamesToTransform == null) {\r\n        rule.keyframeNamesToTransform = [];\r\n        for (let keyframe in keyframeTransforms) {\r\n          transform = keyframeTransforms[keyframe];\r\n          output = transform(input);\r\n          // If the transform actually changed the CSS text, we cache the\r\n          // transform name for future use:\r\n          if (input !== output) {\r\n            input = output;\r\n            rule.keyframeNamesToTransform.push(keyframe);\r\n          }\r\n        }\r\n      } else {\r\n        // If we already have a list of keyframe names that apply to this\r\n        // rule, we apply only those keyframe name transforms:\r\n        for (let i = 0; i < rule.keyframeNamesToTransform.length; ++i) {\r\n          transform = keyframeTransforms[rule.keyframeNamesToTransform[i]];\r\n          input = transform(input);\r\n        }\r\n        output = input;\r\n      }\r\n    }\r\n    rule['cssText'] = output;\r\n  }\r\n\r\n  // Test if the rules in these styles matches the given `element` and if so,\r\n  // collect any custom properties into `props`.\r\n  /**\r\n   * @param {StyleNode} rules\r\n   * @param {Element} element\r\n   */\r\n  propertyDataFromStyles(rules, element) {\r\n    let props = {}, self = this;\r\n    // generates a unique key for these matches\r\n    let o = [];\r\n    // note: active rules excludes non-matching @media rules\r\n    StyleUtil.forEachRule(rules, function(rule) {\r\n      // TODO(sorvell): we could trim the set of rules at declaration\r\n      // time to only include ones that have properties\r\n      if (!rule.propertyInfo) {\r\n        self.decorateRule(rule);\r\n      }\r\n      // match element against transformedSelector: selector may contain\r\n      // unwanted uniquification and parsedSelector does not directly match\r\n      // for :host selectors.\r\n      let selectorToMatch = rule.transformedSelector || rule['parsedSelector'];\r\n      if (element && rule.propertyInfo.properties && selectorToMatch) {\r\n        if (matchesSelector.call(element, selectorToMatch)) {\r\n          self.collectProperties(rule, props);\r\n          // produce numeric key for these matches for lookup\r\n          addToBitMask(rule.index, o);\r\n        }\r\n      }\r\n    }, null, true);\r\n    return {properties: props, key: o};\r\n  }\r\n\r\n  /**\r\n   * @param {Element} scope\r\n   * @param {StyleNode} rule\r\n   * @param {string|undefined} cssBuild\r\n   * @param {function(Object)} callback\r\n   */\r\n  whenHostOrRootRule(scope, rule, cssBuild, callback) {\r\n    if (!rule.propertyInfo) {\r\n      this.decorateRule(rule);\r\n    }\r\n    if (!rule.propertyInfo.properties) {\r\n      return;\r\n    }\r\n    let {is, typeExtension} = StyleUtil.getIsExtends(scope);\r\n    let hostScope = is ?\r\n      StyleTransformer._calcHostScope(is, typeExtension) :\r\n      'html';\r\n    let parsedSelector = rule['parsedSelector'];\r\n    let isRoot = (parsedSelector === ':host > *' || parsedSelector === 'html');\r\n    let isHost = parsedSelector.indexOf(':host') === 0 && !isRoot;\r\n    // build info is either in scope (when scope is an element) or in the style\r\n    // when scope is the default scope; note: this allows default scope to have\r\n    // mixed mode built and unbuilt styles.\r\n    if (cssBuild === 'shady') {\r\n      // :root -> x-foo > *.x-foo for elements and html for custom-style\r\n      isRoot = parsedSelector === (hostScope + ' > *.' + hostScope) || parsedSelector.indexOf('html') !== -1;\r\n      // :host -> x-foo for elements, but sub-rules have .x-foo in them\r\n      isHost = !isRoot && parsedSelector.indexOf(hostScope) === 0;\r\n    }\r\n    if (cssBuild === 'shadow') {\r\n      isRoot = parsedSelector === ':host > *' || parsedSelector === 'html';\r\n      isHost = isHost && !isRoot;\r\n    }\r\n    if (!isRoot && !isHost) {\r\n      return;\r\n    }\r\n    let selectorToMatch = hostScope;\r\n    if (isHost) {\r\n      // need to transform :host under ShadowDOM because `:host` does not work with `matches`\r\n      if (nativeShadow && !rule.transformedSelector) {\r\n        // transform :host into a matchable selector\r\n        rule.transformedSelector =\r\n        StyleTransformer._transformRuleCss(\r\n          rule,\r\n          StyleTransformer._transformComplexSelector,\r\n          StyleTransformer._calcElementScope(is),\r\n          hostScope\r\n        );\r\n      }\r\n      selectorToMatch = rule.transformedSelector || hostScope;\r\n    }\r\n    callback({\r\n      selector: selectorToMatch,\r\n      isHost: isHost,\r\n      isRoot: isRoot\r\n    });\r\n  }\r\n/**\r\n * @param {Element} scope\r\n * @param {StyleNode} rules\r\n * @return {Object}\r\n */\r\n  hostAndRootPropertiesForScope(scope, rules) {\r\n    let hostProps = {}, rootProps = {}, self = this;\r\n    // note: active rules excludes non-matching @media rules\r\n    let cssBuild = rules && rules['__cssBuild'];\r\n    StyleUtil.forEachRule(rules, function(rule) {\r\n      // if scope is StyleDefaults, use _element for matchesSelector\r\n      self.whenHostOrRootRule(scope, rule, cssBuild, function(info) {\r\n        let element = scope._element || scope;\r\n        if (matchesSelector.call(element, info.selector)) {\r\n          if (info.isHost) {\r\n            self.collectProperties(rule, hostProps);\r\n          } else {\r\n            self.collectProperties(rule, rootProps);\r\n          }\r\n        }\r\n      });\r\n    }, null, true);\r\n    return {rootProps: rootProps, hostProps: hostProps};\r\n  }\r\n\r\n  /**\r\n   * @param {Element} element\r\n   * @param {Object} properties\r\n   * @param {string} scopeSelector\r\n   */\r\n  transformStyles(element, properties, scopeSelector) {\r\n    let self = this;\r\n    let {is, typeExtension} = StyleUtil.getIsExtends(element);\r\n    let hostSelector = StyleTransformer\r\n      ._calcHostScope(is, typeExtension);\r\n    let rxHostSelector = element.extends ?\r\n      '\\\\' + hostSelector.slice(0, -1) + '\\\\]' :\r\n      hostSelector;\r\n    let hostRx = new RegExp(RX.HOST_PREFIX + rxHostSelector +\r\n      RX.HOST_SUFFIX);\r\n    let rules = StyleInfo.get(element).styleRules;\r\n    let keyframeTransforms =\r\n      this._elementKeyframeTransforms(element, rules, scopeSelector);\r\n    return StyleTransformer.elementStyles(element, rules, function(rule) {\r\n      self.applyProperties(rule, properties);\r\n      if (!nativeShadow &&\r\n          !StyleUtil.isKeyframesSelector(rule) &&\r\n          rule['cssText']) {\r\n        // NOTE: keyframe transforms only scope munge animation names, so it\r\n        // is not necessary to apply them in ShadowDOM.\r\n        self.applyKeyframeTransforms(rule, keyframeTransforms);\r\n        self._scopeSelector(rule, hostRx, hostSelector, scopeSelector);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @param {Element} element\r\n   * @param {StyleNode} rules\r\n   * @param {string} scopeSelector\r\n   * @return {Object}\r\n   */\r\n  _elementKeyframeTransforms(element, rules, scopeSelector) {\r\n    let keyframesRules = rules._keyframes;\r\n    let keyframeTransforms = {};\r\n    if (!nativeShadow && keyframesRules) {\r\n      // For non-ShadowDOM, we transform all known keyframes rules in\r\n      // advance for the current scope. This allows us to catch keyframes\r\n      // rules that appear anywhere in the stylesheet:\r\n      for (let i = 0, keyframesRule = keyframesRules[i];\r\n           i < keyframesRules.length;\r\n           keyframesRule = keyframesRules[++i]) {\r\n        this._scopeKeyframes(keyframesRule, scopeSelector);\r\n        keyframeTransforms[keyframesRule['keyframesName']] =\r\n            this._keyframesRuleTransformer(keyframesRule);\r\n      }\r\n    }\r\n    return keyframeTransforms;\r\n  }\r\n\r\n  // Generate a factory for transforming a chunk of CSS text to handle a\r\n  // particular scoped keyframes rule.\r\n  /**\r\n   * @param {StyleNode} keyframesRule\r\n   * @return {function(string):string}\r\n   */\r\n  _keyframesRuleTransformer(keyframesRule) {\r\n    return function(cssText) {\r\n      return cssText.replace(\r\n          keyframesRule.keyframesNameRx,\r\n          keyframesRule.transformedKeyframesName);\r\n    };\r\n  }\r\n\r\n/**\r\n * Transforms `@keyframes` names to be unique for the current host.\r\n * Example: @keyframes foo-anim -> @keyframes foo-anim-x-foo-0\r\n *\r\n * @param {StyleNode} rule\r\n * @param {string} scopeId\r\n */\r\n  _scopeKeyframes(rule, scopeId) {\r\n    rule.keyframesNameRx = new RegExp(rule['keyframesName'], 'g');\r\n    rule.transformedKeyframesName = rule['keyframesName'] + '-' + scopeId;\r\n    rule.transformedSelector = rule.transformedSelector || rule['selector'];\r\n    rule['selector'] = rule.transformedSelector.replace(\r\n        rule['keyframesName'], rule.transformedKeyframesName);\r\n  }\r\n\r\n  // Strategy: x scope shim a selector e.g. to scope `.x-foo-42` (via classes):\r\n  // non-host selector: .a.x-foo -> .x-foo-42 .a.x-foo\r\n  // host selector: x-foo.wide -> .x-foo-42.wide\r\n  // note: we use only the scope class (.x-foo-42) and not the hostSelector\r\n  // (x-foo) to scope :host rules; this helps make property host rules\r\n  // have low specificity. They are overrideable by class selectors but,\r\n  // unfortunately, not by type selectors (e.g. overriding via\r\n  // `.special` is ok, but not by `x-foo`).\r\n  /**\r\n   * @param {StyleNode} rule\r\n   * @param {RegExp} hostRx\r\n   * @param {string} hostSelector\r\n   * @param {string} scopeId\r\n   */\r\n  _scopeSelector(rule, hostRx, hostSelector, scopeId) {\r\n    rule.transformedSelector = rule.transformedSelector || rule['selector'];\r\n    let selector = rule.transformedSelector;\r\n    let scope = '.' + scopeId;\r\n    let parts = selector.split(',');\r\n    for (let i=0, l=parts.length, p; (i<l) && (p=parts[i]); i++) {\r\n      parts[i] = p.match(hostRx) ?\r\n        p.replace(hostSelector, scope) :\r\n        scope + ' ' + p;\r\n    }\r\n    rule['selector'] = parts.join(',');\r\n  }\r\n\r\n  /**\r\n   * @param {Element} element\r\n   * @param {string} selector\r\n   * @param {string} old\r\n   */\r\n  applyElementScopeSelector(element, selector, old) {\r\n    let c = element.getAttribute('class') || '';\r\n    let v = c;\r\n    if (old) {\r\n      v = c.replace(\r\n        new RegExp('\\\\s*' + XSCOPE_NAME + '\\\\s*' + old + '\\\\s*', 'g'), ' ');\r\n    }\r\n    v += (v ? ' ' : '') + XSCOPE_NAME + ' ' + selector;\r\n    if (c !== v) {\r\n      StyleUtil.setElementClassRaw(element, v);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {HTMLElement} element\r\n   * @param {Object} properties\r\n   * @param {string} selector\r\n   * @param {HTMLStyleElement} style\r\n   * @return {HTMLStyleElement}\r\n   */\r\n  applyElementStyle(element, properties, selector, style) {\r\n    // calculate cssText to apply\r\n    let cssText = style ? style.textContent || '' :\r\n      this.transformStyles(element, properties, selector);\r\n    // if shady and we have a cached style that is not style, decrement\r\n    let styleInfo = StyleInfo.get(element);\r\n    let s = styleInfo.customStyle;\r\n    if (s && !nativeShadow && (s !== style)) {\r\n      s['_useCount']--;\r\n      if (s['_useCount'] <= 0 && s.parentNode) {\r\n        s.parentNode.removeChild(s);\r\n      }\r\n    }\r\n    // apply styling always under native or if we generated style\r\n    // or the cached style is not in document(!)\r\n    if (nativeShadow) {\r\n      // update existing style only under native\r\n      if (styleInfo.customStyle) {\r\n        styleInfo.customStyle.textContent = cssText;\r\n        style = styleInfo.customStyle;\r\n      // otherwise, if we have css to apply, do so\r\n      } else if (cssText) {\r\n        // apply css after the scope style of the element to help with\r\n        // style precedence rules.\r\n        style = StyleUtil.applyCss(cssText, selector, element.shadowRoot,\r\n          styleInfo.placeholder);\r\n      }\r\n    } else {\r\n      // shady and no cache hit\r\n      if (!style) {\r\n        // apply css after the scope style of the element to help with\r\n        // style precedence rules.\r\n        if (cssText) {\r\n          style = StyleUtil.applyCss(cssText, selector, null,\r\n            styleInfo.placeholder);\r\n        }\r\n      // shady and cache hit but not in document\r\n      } else if (!style.parentNode) {\r\n        if (IS_IE && cssText.indexOf('@media') > -1) {\r\n            // @media rules may be stale in IE 10 and 11\r\n            // refresh the text content of the style to revalidate them.\r\n          style.textContent = cssText;\r\n        }\r\n        StyleUtil.applyStyle(style, null, styleInfo.placeholder);\r\n      }\r\n    }\r\n    // ensure this style is our custom style and increment its use count.\r\n    if (style) {\r\n      style['_useCount'] = style['_useCount'] || 0;\r\n      // increment use count if we changed styles\r\n      if (styleInfo.customStyle != style) {\r\n        style['_useCount']++;\r\n      }\r\n      styleInfo.customStyle = style;\r\n    }\r\n    return style;\r\n  }\r\n\r\n  /**\r\n   * @param {Element} style\r\n   * @param {Object} properties\r\n   */\r\n  applyCustomStyle(style, properties) {\r\n    let rules = StyleUtil.rulesForStyle(/** @type {HTMLStyleElement} */(style));\r\n    let self = this;\r\n    style.textContent = StyleUtil.toCssText(rules, function(/** StyleNode */rule) {\r\n      let css = rule['cssText'] = rule['parsedCssText'];\r\n      if (rule.propertyInfo && rule.propertyInfo.cssText) {\r\n        // remove property assignments\r\n        // so next function isn't confused\r\n        // NOTE: we have 3 categories of css:\r\n        // (1) normal properties,\r\n        // (2) custom property assignments (--foo: red;),\r\n        // (3) custom property usage: border: var(--foo); @apply(--foo);\r\n        // In elements, 1 and 3 are separated for efficiency; here they\r\n        // are not and this makes this case unique.\r\n        css = removeCustomPropAssignment(/** @type {string} */(css));\r\n        // replace with reified properties, scenario is same as mixin\r\n        rule['cssText'] = self.valueForProperties(css, properties);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * @param {number} n\r\n * @param {Array<number>} bits\r\n */\r\nfunction addToBitMask(n, bits) {\r\n  let o = parseInt(n / 32, 10);\r\n  let v = 1 << (n % 32);\r\n  bits[o] = (bits[o] || 0) | v;\r\n}\r\n\r\nexport default new StyleProperties();","/**\r\n@license\r\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\r\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\nCode distributed by Google as part of the polymer project is also\r\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n*/\r\n\r\n'use strict';\r\n\r\nimport {applyStylePlaceHolder} from './style-util.js'\r\nimport {nativeShadow} from './style-settings.js'\r\n\r\n/** @type {Object<string, !Node>} */\r\nlet placeholderMap = {};\r\n\r\n/**\r\n * @const {CustomElementRegistry}\r\n */\r\nconst ce = window['customElements'];\r\nif (ce && !nativeShadow) {\r\n  /**\r\n   * @const {function(this:CustomElementRegistry, string,function(new:HTMLElement),{extends: string}=)}\r\n   */\r\n  const origDefine = ce['define'];\r\n  /**\r\n   * @param {string} name\r\n   * @param {function(new:HTMLElement)} clazz\r\n   * @param {{extends: string}=} options\r\n   * @return {function(new:HTMLElement)}\r\n   */\r\n  const wrappedDefine = (name, clazz, options) => {\r\n    placeholderMap[name] = applyStylePlaceHolder(name);\r\n    return origDefine.call(/** @type {!CustomElementRegistry} */(ce), name, clazz, options);\r\n  }\r\n  ce['define'] = wrappedDefine;\r\n}\r\n\r\nexport default placeholderMap;\r\n","/**\r\n@license\r\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\r\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\nCode distributed by Google as part of the polymer project is also\r\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n*/\r\n\r\n'use strict';\r\n\r\nimport {parse, StyleNode} from './css-parse.js'\r\nimport {nativeShadow, nativeCssVariables} from './style-settings.js'\r\nimport StyleTransformer from './style-transformer.js'\r\nimport * as StyleUtil from './style-util.js'\r\nimport StyleProperties from './style-properties.js'\r\nimport placeholderMap from './style-placeholder.js'\r\nimport StyleInfo from './style-info.js'\r\nimport StyleCache from './style-cache.js'\r\nimport {flush as watcherFlush} from './document-watcher.js'\r\nimport templateMap from './template-map.js'\r\nimport * as ApplyShimUtils from './apply-shim-utils.js'\r\nimport documentWait from './document-wait.js'\r\nimport {updateNativeProperties, detectMixin} from './common-utils.js'\r\nimport {CustomStyleInterfaceInterface} from './custom-style-interface.js' //eslint-disable-line no-unused-vars\r\n\r\n/**\r\n * @const {StyleCache}\r\n */\r\nconst styleCache = new StyleCache();\r\n\r\nexport default class ScopingShim {\r\n  constructor() {\r\n    this._scopeCounter = {};\r\n    this._documentOwner = document.documentElement;\r\n    let ast = new StyleNode();\r\n    ast['rules'] = [];\r\n    this._documentOwnerStyleInfo = StyleInfo.set(this._documentOwner, new StyleInfo(ast));\r\n    this._elementsHaveApplied = false;\r\n    this._applyShim = null;\r\n    /** @type {?CustomStyleInterfaceInterface} */\r\n    this._customStyleInterface = null;\r\n    documentWait(() => {\r\n      this._ensure();\r\n    });\r\n  }\r\n  flush() {\r\n    watcherFlush();\r\n  }\r\n  _generateScopeSelector(name) {\r\n    let id = this._scopeCounter[name] = (this._scopeCounter[name] || 0) + 1;\r\n    return `${name}-${id}`;\r\n  }\r\n  getStyleAst(style) {\r\n    return StyleUtil.rulesForStyle(style);\r\n  }\r\n  styleAstToString(ast) {\r\n    return StyleUtil.toCssText(ast);\r\n  }\r\n  _gatherStyles(template) {\r\n    let styles = template.content.querySelectorAll('style');\r\n    let cssText = [];\r\n    for (let i = 0; i < styles.length; i++) {\r\n      let s = styles[i];\r\n      cssText.push(s.textContent);\r\n      s.parentNode.removeChild(s);\r\n    }\r\n    return cssText.join('').trim();\r\n  }\r\n  _getCssBuild(template) {\r\n    let style = template.content.querySelector('style');\r\n    if (!style) {\r\n      return '';\r\n    }\r\n    return style.getAttribute('css-build') || '';\r\n  }\r\n  /**\r\n   * Prepare the styling and template for the given element type\r\n   *\r\n   * @param {HTMLTemplateElement} template\r\n   * @param {string} elementName\r\n   * @param {string=} typeExtension\r\n   */\r\n  prepareTemplate(template, elementName, typeExtension) {\r\n    if (template._prepared) {\r\n      return;\r\n    }\r\n    template._prepared = true;\r\n    template.name = elementName;\r\n    template.extends = typeExtension;\r\n    templateMap[elementName] = template;\r\n    let cssBuild = this._getCssBuild(template);\r\n    let cssText = this._gatherStyles(template);\r\n    let info = {\r\n      is: elementName,\r\n      extends: typeExtension,\r\n      __cssBuild: cssBuild,\r\n    };\r\n    if (!nativeShadow) {\r\n      StyleTransformer.dom(template.content, elementName);\r\n    }\r\n    // check if the styling has mixin definitions or uses\r\n    this._ensure();\r\n    let hasMixins = detectMixin(cssText)\r\n    let ast = parse(cssText);\r\n    // only run the applyshim transforms if there is a mixin involved\r\n    if (hasMixins && nativeCssVariables && this._applyShim) {\r\n      this._applyShim['transformRules'](ast, elementName);\r\n    }\r\n    template['_styleAst'] = ast;\r\n    template._cssBuild = cssBuild;\r\n\r\n    let ownPropertyNames = [];\r\n    if (!nativeCssVariables) {\r\n      ownPropertyNames = StyleProperties.decorateStyles(template['_styleAst'], info);\r\n    }\r\n    if (!ownPropertyNames.length || nativeCssVariables) {\r\n      let root = nativeShadow ? template.content : null;\r\n      let placeholder = placeholderMap[elementName];\r\n      let style = this._generateStaticStyle(info, template['_styleAst'], root, placeholder);\r\n      template._style = style;\r\n    }\r\n    template._ownPropertyNames = ownPropertyNames;\r\n  }\r\n  _generateStaticStyle(info, rules, shadowroot, placeholder) {\r\n    let cssText = StyleTransformer.elementStyles(info, rules);\r\n    if (cssText.length) {\r\n      return StyleUtil.applyCss(cssText, info.is, shadowroot, placeholder);\r\n    }\r\n  }\r\n  _prepareHost(host) {\r\n    let {is, typeExtension} = StyleUtil.getIsExtends(host);\r\n    let placeholder = placeholderMap[is];\r\n    let template = templateMap[is];\r\n    let ast;\r\n    let ownStylePropertyNames;\r\n    let cssBuild;\r\n    if (template) {\r\n      ast = template['_styleAst'];\r\n      ownStylePropertyNames = template._ownPropertyNames;\r\n      cssBuild = template._cssBuild;\r\n    }\r\n    return StyleInfo.set(host,\r\n      new StyleInfo(\r\n        ast,\r\n        placeholder,\r\n        ownStylePropertyNames,\r\n        is,\r\n        typeExtension,\r\n        cssBuild\r\n      )\r\n    );\r\n  }\r\n  _ensureApplyShim() {\r\n    if (this._applyShim) {\r\n      return;\r\n    } else if (window.ShadyCSS && window.ShadyCSS.ApplyShim) {\r\n      this._applyShim = window.ShadyCSS.ApplyShim;\r\n      this._applyShim['invalidCallback'] = ApplyShimUtils.invalidate;\r\n    }\r\n  }\r\n  _ensureCustomStyleInterface() {\r\n    if (this._customStyleInterface) {\r\n      return;\r\n    } else if (window.ShadyCSS && window.ShadyCSS.CustomStyleInterface) {\r\n      this._customStyleInterface = /** @type {!CustomStyleInterfaceInterface} */(window.ShadyCSS.CustomStyleInterface);\r\n      /** @type {function(!HTMLStyleElement)} */\r\n      this._customStyleInterface['transformCallback'] = (style) => {this.transformCustomStyleForDocument(style)};\r\n      this._customStyleInterface['validateCallback'] = () => {\r\n        requestAnimationFrame(() => {\r\n          if (this._customStyleInterface['enqueued'] || this._elementsHaveApplied) {\r\n            this.flushCustomStyles();\r\n          }\r\n        })\r\n      };\r\n    }\r\n  }\r\n  _ensure() {\r\n    this._ensureApplyShim();\r\n    this._ensureCustomStyleInterface();\r\n  }\r\n  /**\r\n   * Flush and apply custom styles to document\r\n   */\r\n  flushCustomStyles() {\r\n    this._ensure();\r\n    if (!this._customStyleInterface) {\r\n      return;\r\n    }\r\n    let customStyles = this._customStyleInterface['processStyles']();\r\n    // early return if custom-styles don't need validation\r\n    if (!this._customStyleInterface['enqueued']) {\r\n      return;\r\n    }\r\n    if (!nativeCssVariables) {\r\n      this._updateProperties(this._documentOwner, this._documentOwnerStyleInfo);\r\n      this._applyCustomStyles(customStyles);\r\n    } else {\r\n      this._revalidateCustomStyleApplyShim(customStyles);\r\n    }\r\n    this._customStyleInterface['enqueued'] = false;\r\n    // if custom elements have upgraded and there are no native css variables, we must recalculate the whole tree\r\n    if (this._elementsHaveApplied && !nativeCssVariables) {\r\n      this.styleDocument();\r\n    }\r\n  }\r\n  /**\r\n   * Apply styles for the given element\r\n   *\r\n   * @param {!HTMLElement} host\r\n   * @param {Object=} overrideProps\r\n   */\r\n  styleElement(host, overrideProps) {\r\n    let {is} = StyleUtil.getIsExtends(host);\r\n    let styleInfo = StyleInfo.get(host);\r\n    if (!styleInfo) {\r\n      styleInfo = this._prepareHost(host);\r\n    }\r\n    // Only trip the `elementsHaveApplied` flag if a node other that the root document has `applyStyle` called\r\n    if (!this._isRootOwner(host)) {\r\n      this._elementsHaveApplied = true;\r\n    }\r\n    if (overrideProps) {\r\n      styleInfo.overrideStyleProperties =\r\n        styleInfo.overrideStyleProperties || {};\r\n      Object.assign(styleInfo.overrideStyleProperties, overrideProps);\r\n    }\r\n    if (!nativeCssVariables) {\r\n     this._updateProperties(host, styleInfo);\r\n      if (styleInfo.ownStylePropertyNames && styleInfo.ownStylePropertyNames.length) {\r\n        this._applyStyleProperties(host, styleInfo);\r\n      }\r\n    } else {\r\n      if (styleInfo.overrideStyleProperties) {\r\n        updateNativeProperties(host, styleInfo.overrideStyleProperties);\r\n      }\r\n      let template = templateMap[is];\r\n      // bail early if there is no shadowroot for this element\r\n      if (!template && !this._isRootOwner(host)) {\r\n        return;\r\n      }\r\n      if (template && template._style && !ApplyShimUtils.templateIsValid(template)) {\r\n        // update template\r\n        if (!ApplyShimUtils.templateIsValidating(template)) {\r\n          this._ensure();\r\n          this._applyShim && this._applyShim['transformRules'](template['_styleAst'], is);\r\n          template._style.textContent = StyleTransformer.elementStyles(host, styleInfo.styleRules);\r\n          ApplyShimUtils.startValidatingTemplate(template);\r\n        }\r\n        // update instance if native shadowdom\r\n        if (nativeShadow) {\r\n          let root = host.shadowRoot;\r\n          if (root) {\r\n            let style = root.querySelector('style');\r\n            style.textContent = StyleTransformer.elementStyles(host, styleInfo.styleRules);\r\n          }\r\n        }\r\n        styleInfo.styleRules = template['_styleAst'];\r\n      }\r\n    }\r\n  }\r\n  _styleOwnerForNode(node) {\r\n    let root = node.getRootNode();\r\n    let host = root.host;\r\n    if (host) {\r\n      if (StyleInfo.get(host)) {\r\n        return host;\r\n      } else {\r\n        return this._styleOwnerForNode(host);\r\n      }\r\n    }\r\n    return this._documentOwner;\r\n  }\r\n  _isRootOwner(node) {\r\n    return (node === this._documentOwner);\r\n  }\r\n  _applyStyleProperties(host, styleInfo) {\r\n    let is = StyleUtil.getIsExtends(host).is;\r\n    let cacheEntry = styleCache.fetch(is, styleInfo.styleProperties, styleInfo.ownStylePropertyNames);\r\n    let cachedScopeSelector = cacheEntry && cacheEntry.scopeSelector;\r\n    let cachedStyle = cacheEntry ? cacheEntry.styleElement : null;\r\n    let oldScopeSelector = styleInfo.scopeSelector;\r\n    // only generate new scope if cached style is not found\r\n    styleInfo.scopeSelector = cachedScopeSelector || this._generateScopeSelector(is);\r\n    let style = StyleProperties.applyElementStyle(host, styleInfo.styleProperties, styleInfo.scopeSelector, cachedStyle);\r\n    if (!nativeShadow) {\r\n      StyleProperties.applyElementScopeSelector(host, styleInfo.scopeSelector, oldScopeSelector);\r\n    }\r\n    if (!cacheEntry) {\r\n      styleCache.store(is, styleInfo.styleProperties, style, styleInfo.scopeSelector);\r\n    }\r\n    return style;\r\n  }\r\n  _updateProperties(host, styleInfo) {\r\n    let owner = this._styleOwnerForNode(host);\r\n    let ownerStyleInfo = StyleInfo.get(owner);\r\n    let ownerProperties = ownerStyleInfo.styleProperties;\r\n    let props = Object.create(ownerProperties || null);\r\n    let hostAndRootProps = StyleProperties.hostAndRootPropertiesForScope(host, styleInfo.styleRules);\r\n    let propertyData = StyleProperties.propertyDataFromStyles(ownerStyleInfo.styleRules, host);\r\n    let propertiesMatchingHost = propertyData.properties\r\n    Object.assign(\r\n      props,\r\n      hostAndRootProps.hostProps,\r\n      propertiesMatchingHost,\r\n      hostAndRootProps.rootProps\r\n    );\r\n    this._mixinOverrideStyles(props, styleInfo.overrideStyleProperties);\r\n    StyleProperties.reify(props);\r\n    styleInfo.styleProperties = props;\r\n  }\r\n  _mixinOverrideStyles(props, overrides) {\r\n    for (let p in overrides) {\r\n      let v = overrides[p];\r\n      // skip override props if they are not truthy or 0\r\n      // in order to fall back to inherited values\r\n      if (v || v === 0) {\r\n        props[p] = v;\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Update styles of the whole document\r\n   *\r\n   * @param {Object=} properties\r\n   */\r\n  styleDocument(properties) {\r\n    this.styleSubtree(this._documentOwner, properties);\r\n  }\r\n  /**\r\n   * Update styles of a subtree\r\n   *\r\n   * @param {!HTMLElement} host\r\n   * @param {Object=} properties\r\n   */\r\n  styleSubtree(host, properties) {\r\n    let root = host.shadowRoot;\r\n    if (root || this._isRootOwner(host)) {\r\n      this.styleElement(host, properties);\r\n    }\r\n    // process the shadowdom children of `host`\r\n    let shadowChildren = root && (root.children || root.childNodes);\r\n    if (shadowChildren) {\r\n      for (let i = 0; i < shadowChildren.length; i++) {\r\n        let c = /** @type {!HTMLElement} */(shadowChildren[i]);\r\n        this.styleSubtree(c);\r\n      }\r\n    } else {\r\n      // process the lightdom children of `host`\r\n      let children = host.children || host.childNodes;\r\n      if (children) {\r\n        for (let i = 0; i < children.length; i++) {\r\n          let c = /** @type {!HTMLElement} */(children[i]);\r\n          this.styleSubtree(c);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  /* Custom Style operations */\r\n  _revalidateCustomStyleApplyShim(customStyles) {\r\n    for (let i = 0; i < customStyles.length; i++) {\r\n      let c = customStyles[i];\r\n      let s = this._customStyleInterface['getStyleForCustomStyle'](c);\r\n      if (s) {\r\n        this._revalidateApplyShim(s);\r\n      }\r\n    }\r\n  }\r\n  _applyCustomStyles(customStyles) {\r\n    for (let i = 0; i < customStyles.length; i++) {\r\n      let c = customStyles[i];\r\n      let s = this._customStyleInterface['getStyleForCustomStyle'](c);\r\n      if (s) {\r\n        StyleProperties.applyCustomStyle(s, this._documentOwnerStyleInfo.styleProperties);\r\n      }\r\n    }\r\n  }\r\n  transformCustomStyleForDocument(style) {\r\n    let ast = StyleUtil.rulesForStyle(style);\r\n    StyleUtil.forEachRule(ast, (rule) => {\r\n      if (nativeShadow) {\r\n        StyleTransformer.normalizeRootSelector(rule);\r\n      } else {\r\n        StyleTransformer.documentRule(rule);\r\n      }\r\n      if (nativeCssVariables) {\r\n        this._ensure();\r\n        this._applyShim && this._applyShim['transformRule'](rule);\r\n      }\r\n    });\r\n    if (nativeCssVariables) {\r\n      style.textContent = StyleUtil.toCssText(ast);\r\n    } else {\r\n      this._documentOwnerStyleInfo.styleRules.rules.push(ast);\r\n    }\r\n  }\r\n  _revalidateApplyShim(style) {\r\n    if (nativeCssVariables && this._applyShim) {\r\n      let ast = StyleUtil.rulesForStyle(style);\r\n      this._ensure();\r\n      this._applyShim['transformRules'](ast);\r\n      style.textContent = StyleUtil.toCssText(ast);\r\n    }\r\n  }\r\n  getComputedStyleValue(element, property) {\r\n    let value;\r\n    if (!nativeCssVariables) {\r\n      // element is either a style host, or an ancestor of a style host\r\n      let styleInfo = StyleInfo.get(element) || StyleInfo.get(this._styleOwnerForNode(element));\r\n      value = styleInfo.styleProperties[property];\r\n    }\r\n    // fall back to the property value from the computed styling\r\n    value = value || window.getComputedStyle(element).getPropertyValue(property);\r\n    // trim whitespace that can come after the `:` in css\r\n    // example: padding: 2px -> \" 2px\"\r\n    return value ? value.trim() : '';\r\n  }\r\n  // given an element and a classString, replaces\r\n  // the element's class with the provided classString and adds\r\n  // any necessary ShadyCSS static and property based scoping selectors\r\n  setElementClass(element, classString) {\r\n    let root = element.getRootNode();\r\n    let classes = classString ? classString.split(/\\s/) : [];\r\n    let scopeName = root.host && root.host.localName;\r\n    // If no scope, try to discover scope name from existing class.\r\n    // This can occur if, for example, a template stamped element that\r\n    // has been scoped is manipulated when not in a root.\r\n    if (!scopeName) {\r\n      var classAttr = element.getAttribute('class');\r\n      if (classAttr) {\r\n        let k$ = classAttr.split(/\\s/);\r\n        for (let i=0; i < k$.length; i++) {\r\n          if (k$[i] === StyleTransformer.SCOPE_NAME) {\r\n            scopeName = k$[i+1];\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (scopeName) {\r\n      classes.push(StyleTransformer.SCOPE_NAME, scopeName);\r\n    }\r\n    if (!nativeCssVariables) {\r\n      let styleInfo = StyleInfo.get(element);\r\n      if (styleInfo && styleInfo.scopeSelector) {\r\n        classes.push(StyleProperties.XSCOPE_NAME, styleInfo.scopeSelector);\r\n      }\r\n    }\r\n    StyleUtil.setElementClassRaw(element, classes.join(' '));\r\n  }\r\n  _styleInfoForNode(node) {\r\n    return StyleInfo.get(node);\r\n  }\r\n}\r\n\r\n/* exports */\r\nScopingShim.prototype['flush'] = ScopingShim.prototype.flush;\r\nScopingShim.prototype['prepareTemplate'] = ScopingShim.prototype.prepareTemplate;\r\nScopingShim.prototype['styleElement'] = ScopingShim.prototype.styleElement;\r\nScopingShim.prototype['styleDocument'] = ScopingShim.prototype.styleDocument;\r\nScopingShim.prototype['styleSubtree'] = ScopingShim.prototype.styleSubtree;\r\nScopingShim.prototype['getComputedStyleValue'] = ScopingShim.prototype.getComputedStyleValue;\r\nScopingShim.prototype['setElementClass'] = ScopingShim.prototype.setElementClass;\r\nScopingShim.prototype['_styleInfoForNode'] = ScopingShim.prototype._styleInfoForNode;\r\nScopingShim.prototype['transformCustomStyleForDocument'] = ScopingShim.prototype.transformCustomStyleForDocument;\r\nScopingShim.prototype['getStyleAst'] = ScopingShim.prototype.getStyleAst;\r\nScopingShim.prototype['styleAstToString'] = ScopingShim.prototype.styleAstToString;\r\nScopingShim.prototype['flushCustomStyles'] = ScopingShim.prototype.flushCustomStyles;\r\nObject.defineProperties(ScopingShim.prototype, {\r\n  'nativeShadow': {\r\n    get() {\r\n      return nativeShadow;\r\n    }\r\n  },\r\n  'nativeCss': {\r\n    get() {\r\n      return nativeCssVariables;\r\n    }\r\n  }\r\n});","/**\r\n@license\r\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\r\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\nCode distributed by Google as part of the polymer project is also\r\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n*/\r\n'use strict';\r\n\r\nexport default class StyleCache {\r\n  constructor(typeMax = 100) {\r\n    // map element name -> [{properties, styleElement, scopeSelector}]\r\n    this.cache = {};\r\n    this.typeMax = typeMax;\r\n  }\r\n\r\n  _validate(cacheEntry, properties, ownPropertyNames) {\r\n    for (let idx = 0; idx < ownPropertyNames.length; idx++) {\r\n      let pn = ownPropertyNames[idx];\r\n      if (cacheEntry.properties[pn] !== properties[pn]) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  store(tagname, properties, styleElement, scopeSelector) {\r\n    let list = this.cache[tagname] || [];\r\n    list.push({properties, styleElement, scopeSelector});\r\n    if (list.length > this.typeMax) {\r\n      list.shift();\r\n    }\r\n    this.cache[tagname] = list;\r\n  }\r\n\r\n  fetch(tagname, properties, ownPropertyNames) {\r\n    let list = this.cache[tagname];\r\n    if (!list) {\r\n      return;\r\n    }\r\n    // reverse list for most-recent lookups\r\n    for (let idx = list.length - 1; idx >= 0; idx--) {\r\n      let entry = list[idx];\r\n      if (this._validate(entry, properties, ownPropertyNames)) {\r\n        return entry;\r\n      }\r\n    }\r\n  }\r\n}\r\n","/**\r\n@license\r\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\r\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\nCode distributed by Google as part of the polymer project is also\r\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n*/\r\n\r\n'use strict';\r\n\r\nimport { MIXIN_MATCH, VAR_ASSIGN } from './common-regex'\r\n\r\n/**\r\n * @param {Element} element\r\n * @param {Object=} properties\r\n */\r\nexport function updateNativeProperties(element, properties) {\r\n  // remove previous properties\r\n  for (let p in properties) {\r\n    // NOTE: for bc with shim, don't apply null values.\r\n    if (p === null) {\r\n      element.style.removeProperty(p);\r\n    } else {\r\n      element.style.setProperty(p, properties[p]);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @param {Element} element\r\n * @param {string} property\r\n * @return {string}\r\n */\r\nexport function getComputedStyleValue(element, property) {\r\n  /**\r\n   * @const {string}\r\n   */\r\n  const value = window.getComputedStyle(element).getPropertyValue(property);\r\n  if (!value) {\r\n    return '';\r\n  } else {\r\n    return value.trim();\r\n  }\r\n}\r\n\r\n/**\r\n * return true if `cssText` contains a mixin definition or consumption\r\n * @param {string} cssText\r\n * @return {boolean}\r\n */\r\nexport function detectMixin(cssText) {\r\n  const has = MIXIN_MATCH.test(cssText) || VAR_ASSIGN.test(cssText);\r\n  // reset state of the regexes\r\n  MIXIN_MATCH.lastIndex = 0;\r\n  VAR_ASSIGN.lastIndex = 0;\r\n  return has;\r\n}","/**\r\n@license\r\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\r\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\nCode distributed by Google as part of the polymer project is also\r\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n*/\r\n\r\n'use strict';\r\n\r\nimport ScopingShim from '../src/scoping-shim.js'\r\nimport {nativeCssVariables, nativeShadow} from '../src/style-settings.js'\r\n\r\n/** @const {ScopingShim} */\r\nconst scopingShim = new ScopingShim();\r\n\r\nlet ApplyShim, CustomStyleInterface;\r\n\r\nif (window['ShadyCSS']) {\r\n  ApplyShim = window['ShadyCSS']['ApplyShim'];\r\n  CustomStyleInterface = window['ShadyCSS']['CustomStyleInterface'];\r\n}\r\n\r\nwindow.ShadyCSS = {\r\n  ScopingShim: scopingShim,\r\n  /**\r\n   * @param {!HTMLTemplateElement} template\r\n   * @param {string} elementName\r\n   * @param {string=} elementExtends\r\n   */\r\n  prepareTemplate(template, elementName, elementExtends) {\r\n    scopingShim.flushCustomStyles();\r\n    scopingShim.prepareTemplate(template, elementName, elementExtends)\r\n  },\r\n\r\n  /**\r\n   * @param {!HTMLElement} element\r\n   * @param {Object=} properties\r\n   */\r\n  styleSubtree(element, properties) {\r\n    scopingShim.flushCustomStyles();\r\n    scopingShim.styleSubtree(element, properties);\r\n  },\r\n\r\n  /**\r\n   * @param {!HTMLElement} element\r\n   */\r\n  styleElement(element) {\r\n    scopingShim.flushCustomStyles();\r\n    scopingShim.styleElement(element);\r\n  },\r\n\r\n  /**\r\n   * @param {Object=} properties\r\n   */\r\n  styleDocument(properties) {\r\n    scopingShim.flushCustomStyles();\r\n    scopingShim.styleDocument(properties);\r\n  },\r\n\r\n  /**\r\n   * @param {Element} element\r\n   * @param {string} property\r\n   * @return {string}\r\n   */\r\n  getComputedStyleValue(element, property) {\r\n    return scopingShim.getComputedStyleValue(element, property);\r\n  },\r\n\r\n  nativeCss: nativeCssVariables,\r\n\r\n  nativeShadow: nativeShadow\r\n};\r\n\r\nif (ApplyShim) {\r\n  window.ShadyCSS.ApplyShim = ApplyShim;\r\n}\r\n\r\nif (CustomStyleInterface) {\r\n  window.ShadyCSS.CustomStyleInterface = CustomStyleInterface;\r\n}"]}